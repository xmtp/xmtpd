name: Build xmtpd image

on:
  push:
    branches:
      - main
      - rel/**
    tags:
      - "v*"
  pull_request:
  workflow_dispatch:

jobs:
  push_to_registry:
    strategy:
      matrix:
        image: ["xmtpd", "xmtpd-cli", "xmtpd-prune", "xmtpd-gateway"]
    name: Push Docker Images to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      DOCKER_METADATA_PR_HEAD_SHA: true
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Log in to the container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Git describe
        id: ghd
        uses: proudust/gh-describe@v2
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/xmtp/${{ matrix.image }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha
            type=semver,pattern={{version}}
      - name: Set up Docker image file based on the matrix variable
        id: set_dockerfile
        run: |
          if [[ "${{ matrix.image }}" == "xmtpd" ]]; then
          echo "dockerfile=Dockerfile" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.image }}" == "xmtpd-cli" ]]; then
          echo "dockerfile=cli.Dockerfile" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.image }}" == "xmtpd-prune" ]]; then
          echo "dockerfile=prune.Dockerfile" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.image }}" == "xmtpd-gateway" ]]; then
          echo "dockerfile=gateway.Dockerfile" >> $GITHUB_OUTPUT
          else
          echo "Unknown image: ${{ matrix.image }}"
          exit 1
          fi
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        id: push
        with:
          context: .
          file: ./dev/docker/${{ steps.set_dockerfile.outputs.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: "VERSION=${{ steps.ghd.outputs.describe }}"

      - name: Save digest output
        run: |
          echo "digest=${{ steps.push.outputs.digest }}" > ${{ matrix.image }}.txt

      - name: Upload digest artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.image }}-digest
          path: ${{ matrix.image }}.txt

  deploy:
    name: Aggregate digests & deploy to infra
    runs-on: ubuntu-latest
    needs: push_to_registry
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Download xmtpd digest
        uses: actions/download-artifact@v4
        with:
          name: xmtpd-digest
          path: digests

      - name: Download xmtpd-cli digest
        uses: actions/download-artifact@v4
        with:
          name: xmtpd-cli-digest
          path: digests

      - name: Download xmtpd-prune digest
        uses: actions/download-artifact@v4
        with:
          name: xmtpd-prune-digest
          path: digests

      - name: Download gateway digest
        uses: actions/download-artifact@v4
        with:
          name: xmtpd-gateway-digest
          path: digests

      - name: Read and export digests
        id: digests
        run: |
          set -euo pipefail

          XMTPD_DIGEST=$(cut -d= -f2 digests/xmtpd.txt)
          CLI_DIGEST=$(cut -d= -f2 digests/xmtpd-cli.txt)
          PRUNE_DIGEST=$(cut -d= -f2 digests/xmtpd-prune.txt)
          GATEWAY_DIGEST=$(cut -d= -f2 digests/xmtpd-gateway.txt)

          if [[ -z "$XMTPD_DIGEST" || -z "$CLI_DIGEST" || -z "$PRUNE_DIGEST" || -z "$GATEWAY_DIGEST" ]]; then
            echo "✖️  One or more digests are empty – aborting deploy." >&2
            exit 1
          fi

          XMTPD_IMAGE="ghcr.io/xmtp/xmtpd@$XMTPD_DIGEST"
          CLI_IMAGE="ghcr.io/xmtp/xmtpd-cli@$CLI_DIGEST"
          PRUNE_IMAGE="ghcr.io/xmtp/xmtpd-prune@$PRUNE_DIGEST"
          GATEWAY_IMAGE="ghcr.io/xmtp/xmtpd-gateway@$GATEWAY_DIGEST"

          echo "xmtpd_image=$XMTPD_IMAGE"     >> $GITHUB_OUTPUT
          echo "cli_image=$CLI_IMAGE"         >> $GITHUB_OUTPUT
          echo "prune_image=$PRUNE_IMAGE"     >> $GITHUB_OUTPUT
          echo "gateway_image=$GATEWAY_IMAGE" >> $GITHUB_OUTPUT

      - name: Deploy Testnet
        uses: xmtp-labs/terraform-deployer@v1
        timeout-minutes: 45
        with:
          timeout: 45m
          terraform-token: ${{ secrets.TERRAFORM_TOKEN }}
          terraform-org: xmtp
          terraform-workspace: testnet-staging
          variable-name: "xmtpd_server_docker_image,xmtpd_prune_docker_image"
          variable-value: "${{ steps.digests.outputs.xmtpd_image }},${{ steps.digests.outputs.prune_image }}"
          variable-value-required-prefix: "ghcr.io/xmtp/"
