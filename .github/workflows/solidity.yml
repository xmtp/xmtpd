name: Solidity

on:
  push:
    branches:
      - main
    paths:
      - "contracts/**"
      - ".github/workflows/solidity.yml"
  pull_request:
    paths:
      - "contracts/**"
      - ".github/workflows/solidity.yml"

permissions:
  contents: read
  security-events: write

concurrency:
  group: ci-solidity-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    working-directory: contracts

jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.set-cache-key.outputs.cache-key }}
    strategy:
      fail-fast: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: v0.3.0

      - name: Set cache key
        id: set-cache-key
        run: echo "cache-key=ci-solidity-${{ hashFiles('**/*.sol') }}" >> "$GITHUB_OUTPUT"

      - name: Install dependencies
        run: forge soldeer update

      - name: Build contracts
        run: forge build

      - name: Cache data
        uses: actions/cache/save@v4
        with:
          path: contracts
          key: ${{ steps.set-cache-key.outputs.cache-key }}

      - id: forge
        run: echo "forge_path=$(which forge)" >> "$GITHUB_OUTPUT"

      - name: Upload forge
        uses: actions/upload-artifact@v4
        with:
          name: forge
          path: ${{ steps.forge.outputs.forge_path }}

  test:
    needs: init
    runs-on: ubuntu-latest
    steps:
      - name: Restore cache
        uses: actions/cache/restore@v4
        with:
          path: contracts
          key: ${{ needs.init.outputs.cache-key }}

      - name: Restore forge
        uses: actions/download-artifact@v4
        with:
          name: forge
          path: /usr/local/bin

      - run: chmod +x /usr/local/bin/forge

      - name: Run Forge tests
        run: forge test -vvv

  lint:
    needs: init
    runs-on: ubuntu-latest
    steps:
      - name: Restore cache
        uses: actions/cache/restore@v4
        with:
          path: contracts
          key: ${{ needs.init.outputs.cache-key }}

      - name: Restore forge
        uses: actions/download-artifact@v4
        with:
          name: forge
          path: /usr/local/bin

      - run: chmod +x /usr/local/bin/forge

      - name: Run Forge fmt
        run: forge fmt contracts/src --check

  slither:
    needs: init
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    steps:
      - name: Restore cache
        uses: actions/cache/restore@v4
        with:
          path: contracts
          key: ${{ needs.init.outputs.cache-key }}

      - name: Restore forge
        uses: actions/download-artifact@v4
        with:
          name: forge
          path: /usr/local/bin

      - run: chmod +x /usr/local/bin/forge

      - name: Install Slither
        run: pip3 install slither-analyzer

      - name: Run Slither
        run: slither . --sarif output.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: contracts/output.sarif

  abis:
    needs: init
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Restore cache
        uses: actions/cache/restore@v4
        with:
          path: contracts
          key: ${{ needs.init.outputs.cache-key }}

      - name: Restore forge
        uses: actions/download-artifact@v4
        with:
          name: forge
          path: /usr/local/bin

      - run: chmod +x /usr/local/bin/forge

      - name: Setup Go
        uses: actions/setup-go@v5

      - name: Install abigen
        run: go install github.com/ethereum/go-ethereum/cmd/abigen@v1.14.12

      - name: Generate ABIs
        run: dev/generate

      - name: Check for ABI changes
        working-directory: ${{ github.workspace }}
        run: |
          if git diff --exit-code --ignore-space-change --ignore-all-space --ignore-cr-at-eol -- contracts/pkg; then
            echo "No ABI changes detected."
          else
            echo "ERROR: Generated files are not up to date. Please run 'contracts/dev/generate' and commit the changes."
            exit 1
          fi
