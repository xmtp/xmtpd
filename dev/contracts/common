#!/bin/bash
set -euo pipefail

function forge_deploy_script() {
    case $1 in
        group_messages)
            forge script --rpc-url "${DOCKER_RPC_URL}" --broadcast script/DeployGroupMessages.s.sol &> /dev/null
            if [ $? -ne 0 ]; then
                echo "Failed to deploy group messages contract"
                exit 1
            fi

            echo -e "✅ GroupMessages contract deployed.\n"
            cat config/anvil_localnet/GroupMessages.json
            echo -e "\n"
            ;;

        identity_updates)
            forge script --rpc-url "${DOCKER_RPC_URL}" --broadcast script/DeployIdentityUpdates.s.sol &> /dev/null
            if [ $? -ne 0 ]; then
                echo "Failed to deploy identity updates contract"
                exit 1
            fi

            echo -e "✅ IdentityUpdates contract deployed.\n"
            cat config/anvil_localnet/IdentityUpdates.json
            echo -e "\n"
            ;;

        *)
            echo "Invalid option. Use 'group_messages' or 'identity_updates'."
            exit 1
            ;;
    esac
}

# Deploy a contract and save the output (which includes the contract address) to a JSON file to be used in tests
# TODO: This should be a function in the forge CLI
function deploy_contract() {
    forge create --broadcast --legacy --json --rpc-url $DOCKER_RPC_URL --private-key $PRIVATE_KEY "$1:$2" > ../build/$2.json
}
