// Definitions for backups

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: device_sync/message_backup.proto

package device_sync

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Group message kind
type GroupMessageKindSave int32

const (
	GroupMessageKindSave_GROUP_MESSAGE_KIND_SAVE_UNSPECIFIED       GroupMessageKindSave = 0
	GroupMessageKindSave_GROUP_MESSAGE_KIND_SAVE_APPLICATION       GroupMessageKindSave = 1
	GroupMessageKindSave_GROUP_MESSAGE_KIND_SAVE_MEMBERSHIP_CHANGE GroupMessageKindSave = 2
)

// Enum value maps for GroupMessageKindSave.
var (
	GroupMessageKindSave_name = map[int32]string{
		0: "GROUP_MESSAGE_KIND_SAVE_UNSPECIFIED",
		1: "GROUP_MESSAGE_KIND_SAVE_APPLICATION",
		2: "GROUP_MESSAGE_KIND_SAVE_MEMBERSHIP_CHANGE",
	}
	GroupMessageKindSave_value = map[string]int32{
		"GROUP_MESSAGE_KIND_SAVE_UNSPECIFIED":       0,
		"GROUP_MESSAGE_KIND_SAVE_APPLICATION":       1,
		"GROUP_MESSAGE_KIND_SAVE_MEMBERSHIP_CHANGE": 2,
	}
)

func (x GroupMessageKindSave) Enum() *GroupMessageKindSave {
	p := new(GroupMessageKindSave)
	*p = x
	return p
}

func (x GroupMessageKindSave) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupMessageKindSave) Descriptor() protoreflect.EnumDescriptor {
	return file_device_sync_message_backup_proto_enumTypes[0].Descriptor()
}

func (GroupMessageKindSave) Type() protoreflect.EnumType {
	return &file_device_sync_message_backup_proto_enumTypes[0]
}

func (x GroupMessageKindSave) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupMessageKindSave.Descriptor instead.
func (GroupMessageKindSave) EnumDescriptor() ([]byte, []int) {
	return file_device_sync_message_backup_proto_rawDescGZIP(), []int{0}
}

// Group message delivery status
type DeliveryStatusSave int32

const (
	DeliveryStatusSave_DELIVERY_STATUS_SAVE_UNSPECIFIED DeliveryStatusSave = 0
	DeliveryStatusSave_DELIVERY_STATUS_SAVE_UNPUBLISHED DeliveryStatusSave = 1
	DeliveryStatusSave_DELIVERY_STATUS_SAVE_PUBLISHED   DeliveryStatusSave = 2
	DeliveryStatusSave_DELIVERY_STATUS_SAVE_FAILED      DeliveryStatusSave = 3
)

// Enum value maps for DeliveryStatusSave.
var (
	DeliveryStatusSave_name = map[int32]string{
		0: "DELIVERY_STATUS_SAVE_UNSPECIFIED",
		1: "DELIVERY_STATUS_SAVE_UNPUBLISHED",
		2: "DELIVERY_STATUS_SAVE_PUBLISHED",
		3: "DELIVERY_STATUS_SAVE_FAILED",
	}
	DeliveryStatusSave_value = map[string]int32{
		"DELIVERY_STATUS_SAVE_UNSPECIFIED": 0,
		"DELIVERY_STATUS_SAVE_UNPUBLISHED": 1,
		"DELIVERY_STATUS_SAVE_PUBLISHED":   2,
		"DELIVERY_STATUS_SAVE_FAILED":      3,
	}
)

func (x DeliveryStatusSave) Enum() *DeliveryStatusSave {
	p := new(DeliveryStatusSave)
	*p = x
	return p
}

func (x DeliveryStatusSave) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeliveryStatusSave) Descriptor() protoreflect.EnumDescriptor {
	return file_device_sync_message_backup_proto_enumTypes[1].Descriptor()
}

func (DeliveryStatusSave) Type() protoreflect.EnumType {
	return &file_device_sync_message_backup_proto_enumTypes[1]
}

func (x DeliveryStatusSave) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeliveryStatusSave.Descriptor instead.
func (DeliveryStatusSave) EnumDescriptor() ([]byte, []int) {
	return file_device_sync_message_backup_proto_rawDescGZIP(), []int{1}
}

// Group message content type
type ContentTypeSave int32

const (
	ContentTypeSave_CONTENT_TYPE_SAVE_UNSPECIFIED             ContentTypeSave = 0
	ContentTypeSave_CONTENT_TYPE_SAVE_UNKNOWN                 ContentTypeSave = 1
	ContentTypeSave_CONTENT_TYPE_SAVE_TEXT                    ContentTypeSave = 2
	ContentTypeSave_CONTENT_TYPE_SAVE_GROUP_MEMBERSHIP_CHANGE ContentTypeSave = 3
	ContentTypeSave_CONTENT_TYPE_SAVE_GROUP_UPDATED           ContentTypeSave = 4
	ContentTypeSave_CONTENT_TYPE_SAVE_REACTION                ContentTypeSave = 5
	ContentTypeSave_CONTENT_TYPE_SAVE_READ_RECEIPT            ContentTypeSave = 6
	ContentTypeSave_CONTENT_TYPE_SAVE_REPLY                   ContentTypeSave = 7
	ContentTypeSave_CONTENT_TYPE_SAVE_ATTACHMENT              ContentTypeSave = 8
	ContentTypeSave_CONTENT_TYPE_SAVE_REMOTE_ATTACHMENT       ContentTypeSave = 9
	ContentTypeSave_CONTENT_TYPE_SAVE_TRANSACTION_REFERENCE   ContentTypeSave = 10
)

// Enum value maps for ContentTypeSave.
var (
	ContentTypeSave_name = map[int32]string{
		0:  "CONTENT_TYPE_SAVE_UNSPECIFIED",
		1:  "CONTENT_TYPE_SAVE_UNKNOWN",
		2:  "CONTENT_TYPE_SAVE_TEXT",
		3:  "CONTENT_TYPE_SAVE_GROUP_MEMBERSHIP_CHANGE",
		4:  "CONTENT_TYPE_SAVE_GROUP_UPDATED",
		5:  "CONTENT_TYPE_SAVE_REACTION",
		6:  "CONTENT_TYPE_SAVE_READ_RECEIPT",
		7:  "CONTENT_TYPE_SAVE_REPLY",
		8:  "CONTENT_TYPE_SAVE_ATTACHMENT",
		9:  "CONTENT_TYPE_SAVE_REMOTE_ATTACHMENT",
		10: "CONTENT_TYPE_SAVE_TRANSACTION_REFERENCE",
	}
	ContentTypeSave_value = map[string]int32{
		"CONTENT_TYPE_SAVE_UNSPECIFIED":             0,
		"CONTENT_TYPE_SAVE_UNKNOWN":                 1,
		"CONTENT_TYPE_SAVE_TEXT":                    2,
		"CONTENT_TYPE_SAVE_GROUP_MEMBERSHIP_CHANGE": 3,
		"CONTENT_TYPE_SAVE_GROUP_UPDATED":           4,
		"CONTENT_TYPE_SAVE_REACTION":                5,
		"CONTENT_TYPE_SAVE_READ_RECEIPT":            6,
		"CONTENT_TYPE_SAVE_REPLY":                   7,
		"CONTENT_TYPE_SAVE_ATTACHMENT":              8,
		"CONTENT_TYPE_SAVE_REMOTE_ATTACHMENT":       9,
		"CONTENT_TYPE_SAVE_TRANSACTION_REFERENCE":   10,
	}
)

func (x ContentTypeSave) Enum() *ContentTypeSave {
	p := new(ContentTypeSave)
	*p = x
	return p
}

func (x ContentTypeSave) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContentTypeSave) Descriptor() protoreflect.EnumDescriptor {
	return file_device_sync_message_backup_proto_enumTypes[2].Descriptor()
}

func (ContentTypeSave) Type() protoreflect.EnumType {
	return &file_device_sync_message_backup_proto_enumTypes[2]
}

func (x ContentTypeSave) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContentTypeSave.Descriptor instead.
func (ContentTypeSave) EnumDescriptor() ([]byte, []int) {
	return file_device_sync_message_backup_proto_rawDescGZIP(), []int{2}
}

// Proto representation of a stored group message
type GroupMessageSave struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Id                    []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GroupId               []byte                 `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	DecryptedMessageBytes []byte                 `protobuf:"bytes,3,opt,name=decrypted_message_bytes,json=decryptedMessageBytes,proto3" json:"decrypted_message_bytes,omitempty"`
	SentAtNs              int64                  `protobuf:"varint,4,opt,name=sent_at_ns,json=sentAtNs,proto3" json:"sent_at_ns,omitempty"`
	Kind                  GroupMessageKindSave   `protobuf:"varint,5,opt,name=kind,proto3,enum=xmtp.device_sync.message_backup.GroupMessageKindSave" json:"kind,omitempty"`
	SenderInstallationId  []byte                 `protobuf:"bytes,6,opt,name=sender_installation_id,json=senderInstallationId,proto3" json:"sender_installation_id,omitempty"`
	SenderInboxId         string                 `protobuf:"bytes,7,opt,name=sender_inbox_id,json=senderInboxId,proto3" json:"sender_inbox_id,omitempty"`
	DeliveryStatus        DeliveryStatusSave     `protobuf:"varint,8,opt,name=delivery_status,json=deliveryStatus,proto3,enum=xmtp.device_sync.message_backup.DeliveryStatusSave" json:"delivery_status,omitempty"`
	ContentType           ContentTypeSave        `protobuf:"varint,9,opt,name=content_type,json=contentType,proto3,enum=xmtp.device_sync.message_backup.ContentTypeSave" json:"content_type,omitempty"`
	VersionMajor          int32                  `protobuf:"varint,10,opt,name=version_major,json=versionMajor,proto3" json:"version_major,omitempty"`
	VersionMinor          int32                  `protobuf:"varint,11,opt,name=version_minor,json=versionMinor,proto3" json:"version_minor,omitempty"`
	AuthorityId           string                 `protobuf:"bytes,12,opt,name=authority_id,json=authorityId,proto3" json:"authority_id,omitempty"`
	ReferenceId           []byte                 `protobuf:"bytes,13,opt,name=reference_id,json=referenceId,proto3,oneof" json:"reference_id,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GroupMessageSave) Reset() {
	*x = GroupMessageSave{}
	mi := &file_device_sync_message_backup_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupMessageSave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMessageSave) ProtoMessage() {}

func (x *GroupMessageSave) ProtoReflect() protoreflect.Message {
	mi := &file_device_sync_message_backup_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMessageSave.ProtoReflect.Descriptor instead.
func (*GroupMessageSave) Descriptor() ([]byte, []int) {
	return file_device_sync_message_backup_proto_rawDescGZIP(), []int{0}
}

func (x *GroupMessageSave) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GroupMessageSave) GetGroupId() []byte {
	if x != nil {
		return x.GroupId
	}
	return nil
}

func (x *GroupMessageSave) GetDecryptedMessageBytes() []byte {
	if x != nil {
		return x.DecryptedMessageBytes
	}
	return nil
}

func (x *GroupMessageSave) GetSentAtNs() int64 {
	if x != nil {
		return x.SentAtNs
	}
	return 0
}

func (x *GroupMessageSave) GetKind() GroupMessageKindSave {
	if x != nil {
		return x.Kind
	}
	return GroupMessageKindSave_GROUP_MESSAGE_KIND_SAVE_UNSPECIFIED
}

func (x *GroupMessageSave) GetSenderInstallationId() []byte {
	if x != nil {
		return x.SenderInstallationId
	}
	return nil
}

func (x *GroupMessageSave) GetSenderInboxId() string {
	if x != nil {
		return x.SenderInboxId
	}
	return ""
}

func (x *GroupMessageSave) GetDeliveryStatus() DeliveryStatusSave {
	if x != nil {
		return x.DeliveryStatus
	}
	return DeliveryStatusSave_DELIVERY_STATUS_SAVE_UNSPECIFIED
}

func (x *GroupMessageSave) GetContentType() ContentTypeSave {
	if x != nil {
		return x.ContentType
	}
	return ContentTypeSave_CONTENT_TYPE_SAVE_UNSPECIFIED
}

func (x *GroupMessageSave) GetVersionMajor() int32 {
	if x != nil {
		return x.VersionMajor
	}
	return 0
}

func (x *GroupMessageSave) GetVersionMinor() int32 {
	if x != nil {
		return x.VersionMinor
	}
	return 0
}

func (x *GroupMessageSave) GetAuthorityId() string {
	if x != nil {
		return x.AuthorityId
	}
	return ""
}

func (x *GroupMessageSave) GetReferenceId() []byte {
	if x != nil {
		return x.ReferenceId
	}
	return nil
}

var File_device_sync_message_backup_proto protoreflect.FileDescriptor

var file_device_sync_message_backup_proto_rawDesc = string([]byte{
	0x0a, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1f, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x73, 0x79, 0x6e, 0x63, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x22, 0x95, 0x05, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x76, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x64, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x15, 0x64, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x0a, 0x73,
	0x65, 0x6e, 0x74, 0x5f, 0x61, 0x74, 0x5f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x73, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x4e, 0x73, 0x12, 0x49, 0x0a, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x53, 0x61, 0x76, 0x65, 0x52, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x62, 0x6f, 0x78,
	0x49, 0x64, 0x12, 0x5c, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x78, 0x6d,
	0x74, 0x70, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x61, 0x76, 0x65,
	0x52, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x53, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x53, 0x61, 0x76, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x2a, 0x97, 0x01, 0x0a, 0x14,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4b, 0x69, 0x6e, 0x64,
	0x53, 0x61, 0x76, 0x65, 0x12, 0x27, 0x0a, 0x23, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4d, 0x45,
	0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x27, 0x0a,
	0x23, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x4b,
	0x49, 0x4e, 0x44, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x2d, 0x0a, 0x29, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f,
	0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x53, 0x41, 0x56,
	0x45, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x53, 0x48, 0x49, 0x50, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x47, 0x45, 0x10, 0x02, 0x2a, 0xa5, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x61, 0x76, 0x65, 0x12, 0x24, 0x0a, 0x20,
	0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x53, 0x41, 0x56, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x24, 0x0a, 0x20, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x55, 0x4e, 0x50, 0x55, 0x42,
	0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x44, 0x45, 0x4c, 0x49,
	0x56, 0x45, 0x52, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x41, 0x56, 0x45,
	0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b,
	0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x53, 0x41, 0x56, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x9c, 0x03,
	0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x53, 0x61, 0x76,
	0x65, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x02, 0x12,
	0x2d, 0x0a, 0x29, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x53, 0x41, 0x56, 0x45, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45,
	0x52, 0x53, 0x48, 0x49, 0x50, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x03, 0x12, 0x23,
	0x0a, 0x1f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53,
	0x41, 0x56, 0x45, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x44, 0x10, 0x04, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x05, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x52, 0x45,
	0x43, 0x45, 0x49, 0x50, 0x54, 0x10, 0x06, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x4f, 0x4e, 0x54, 0x45,
	0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x52, 0x45, 0x50,
	0x4c, 0x59, 0x10, 0x07, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48,
	0x4d, 0x45, 0x4e, 0x54, 0x10, 0x08, 0x12, 0x27, 0x0a, 0x23, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x52, 0x45, 0x4d, 0x4f,
	0x54, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x09, 0x12,
	0x2b, 0x0a, 0x27, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x53, 0x41, 0x56, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x52, 0x45, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x0a, 0x42, 0xfc, 0x01, 0x0a,
	0x23, 0x63, 0x6f, 0x6d, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x42, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x78, 0x6d, 0x74, 0x70, 0x2f, 0x78, 0x6d, 0x74, 0x70,
	0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0xa2, 0x02, 0x03, 0x58, 0x44, 0x4d, 0xaa, 0x02, 0x1d,
	0x58, 0x6d, 0x74, 0x70, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0xca, 0x02, 0x1d,
	0x58, 0x6d, 0x74, 0x70, 0x5c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x5c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0xe2, 0x02, 0x29,
	0x58, 0x6d, 0x74, 0x70, 0x5c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x5c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1f, 0x58, 0x6d, 0x74, 0x70,
	0x3a, 0x3a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x3a, 0x3a, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
})

var (
	file_device_sync_message_backup_proto_rawDescOnce sync.Once
	file_device_sync_message_backup_proto_rawDescData []byte
)

func file_device_sync_message_backup_proto_rawDescGZIP() []byte {
	file_device_sync_message_backup_proto_rawDescOnce.Do(func() {
		file_device_sync_message_backup_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_device_sync_message_backup_proto_rawDesc), len(file_device_sync_message_backup_proto_rawDesc)))
	})
	return file_device_sync_message_backup_proto_rawDescData
}

var file_device_sync_message_backup_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_device_sync_message_backup_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_device_sync_message_backup_proto_goTypes = []any{
	(GroupMessageKindSave)(0), // 0: xmtp.device_sync.message_backup.GroupMessageKindSave
	(DeliveryStatusSave)(0),   // 1: xmtp.device_sync.message_backup.DeliveryStatusSave
	(ContentTypeSave)(0),      // 2: xmtp.device_sync.message_backup.ContentTypeSave
	(*GroupMessageSave)(nil),  // 3: xmtp.device_sync.message_backup.GroupMessageSave
}
var file_device_sync_message_backup_proto_depIdxs = []int32{
	0, // 0: xmtp.device_sync.message_backup.GroupMessageSave.kind:type_name -> xmtp.device_sync.message_backup.GroupMessageKindSave
	1, // 1: xmtp.device_sync.message_backup.GroupMessageSave.delivery_status:type_name -> xmtp.device_sync.message_backup.DeliveryStatusSave
	2, // 2: xmtp.device_sync.message_backup.GroupMessageSave.content_type:type_name -> xmtp.device_sync.message_backup.ContentTypeSave
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_device_sync_message_backup_proto_init() }
func file_device_sync_message_backup_proto_init() {
	if File_device_sync_message_backup_proto != nil {
		return
	}
	file_device_sync_message_backup_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_device_sync_message_backup_proto_rawDesc), len(file_device_sync_message_backup_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_device_sync_message_backup_proto_goTypes,
		DependencyIndexes: file_device_sync_message_backup_proto_depIdxs,
		EnumInfos:         file_device_sync_message_backup_proto_enumTypes,
		MessageInfos:      file_device_sync_message_backup_proto_msgTypes,
	}.Build()
	File_device_sync_message_backup_proto = out.File
	file_device_sync_message_backup_proto_goTypes = nil
	file_device_sync_message_backup_proto_depIdxs = nil
}
