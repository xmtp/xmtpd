// Message content encoding structures

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: keystore_api/v1/keystore.proto

package keystore_apiv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Used to get a mapping of conversation topics to their HMAC keys
type GetConversationHmacKeysRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topics        []string               `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationHmacKeysRequest) Reset() {
	*x = GetConversationHmacKeysRequest{}
	mi := &file_keystore_api_v1_keystore_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationHmacKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationHmacKeysRequest) ProtoMessage() {}

func (x *GetConversationHmacKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keystore_api_v1_keystore_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationHmacKeysRequest.ProtoReflect.Descriptor instead.
func (*GetConversationHmacKeysRequest) Descriptor() ([]byte, []int) {
	return file_keystore_api_v1_keystore_proto_rawDescGZIP(), []int{0}
}

func (x *GetConversationHmacKeysRequest) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

// A mapping of topics to their HMAC keys
type GetConversationHmacKeysResponse struct {
	state         protoimpl.MessageState                               `protogen:"open.v1"`
	HmacKeys      map[string]*GetConversationHmacKeysResponse_HmacKeys `protobuf:"bytes,1,rep,name=hmac_keys,json=hmacKeys,proto3" json:"hmac_keys,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationHmacKeysResponse) Reset() {
	*x = GetConversationHmacKeysResponse{}
	mi := &file_keystore_api_v1_keystore_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationHmacKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationHmacKeysResponse) ProtoMessage() {}

func (x *GetConversationHmacKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keystore_api_v1_keystore_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationHmacKeysResponse.ProtoReflect.Descriptor instead.
func (*GetConversationHmacKeysResponse) Descriptor() ([]byte, []int) {
	return file_keystore_api_v1_keystore_proto_rawDescGZIP(), []int{1}
}

func (x *GetConversationHmacKeysResponse) GetHmacKeys() map[string]*GetConversationHmacKeysResponse_HmacKeys {
	if x != nil {
		return x.HmacKeys
	}
	return nil
}

// HmacKeyData wraps the HMAC key and the number of 30 day periods since epoch
type GetConversationHmacKeysResponse_HmacKeyData struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	ThirtyDayPeriodsSinceEpoch int32                  `protobuf:"varint,1,opt,name=thirty_day_periods_since_epoch,json=thirtyDayPeriodsSinceEpoch,proto3" json:"thirty_day_periods_since_epoch,omitempty"`
	HmacKey                    []byte                 `protobuf:"bytes,2,opt,name=hmac_key,json=hmacKey,proto3" json:"hmac_key,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *GetConversationHmacKeysResponse_HmacKeyData) Reset() {
	*x = GetConversationHmacKeysResponse_HmacKeyData{}
	mi := &file_keystore_api_v1_keystore_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationHmacKeysResponse_HmacKeyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationHmacKeysResponse_HmacKeyData) ProtoMessage() {}

func (x *GetConversationHmacKeysResponse_HmacKeyData) ProtoReflect() protoreflect.Message {
	mi := &file_keystore_api_v1_keystore_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationHmacKeysResponse_HmacKeyData.ProtoReflect.Descriptor instead.
func (*GetConversationHmacKeysResponse_HmacKeyData) Descriptor() ([]byte, []int) {
	return file_keystore_api_v1_keystore_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetConversationHmacKeysResponse_HmacKeyData) GetThirtyDayPeriodsSinceEpoch() int32 {
	if x != nil {
		return x.ThirtyDayPeriodsSinceEpoch
	}
	return 0
}

func (x *GetConversationHmacKeysResponse_HmacKeyData) GetHmacKey() []byte {
	if x != nil {
		return x.HmacKey
	}
	return nil
}

// HmacKeys represents multiple HmacKeyData objects
type GetConversationHmacKeysResponse_HmacKeys struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	Values        []*GetConversationHmacKeysResponse_HmacKeyData `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationHmacKeysResponse_HmacKeys) Reset() {
	*x = GetConversationHmacKeysResponse_HmacKeys{}
	mi := &file_keystore_api_v1_keystore_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationHmacKeysResponse_HmacKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationHmacKeysResponse_HmacKeys) ProtoMessage() {}

func (x *GetConversationHmacKeysResponse_HmacKeys) ProtoReflect() protoreflect.Message {
	mi := &file_keystore_api_v1_keystore_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationHmacKeysResponse_HmacKeys.ProtoReflect.Descriptor instead.
func (*GetConversationHmacKeysResponse_HmacKeys) Descriptor() ([]byte, []int) {
	return file_keystore_api_v1_keystore_proto_rawDescGZIP(), []int{1, 1}
}

func (x *GetConversationHmacKeysResponse_HmacKeys) GetValues() []*GetConversationHmacKeysResponse_HmacKeyData {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_keystore_api_v1_keystore_proto protoreflect.FileDescriptor

var file_keystore_api_v1_keystore_proto_rawDesc = string([]byte{
	0x0a, 0x1e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x14, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x22, 0x38, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x6d, 0x61, 0x63, 0x4b, 0x65, 0x79,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73,
	0x22, 0xd5, 0x03, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x6d, 0x61, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x09, 0x68, 0x6d, 0x61, 0x63, 0x5f, 0x6b, 0x65, 0x79,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6b,
	0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x6d,
	0x61, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x48,
	0x6d, 0x61, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x68, 0x6d,
	0x61, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x1a, 0x6c, 0x0a, 0x0b, 0x48, 0x6d, 0x61, 0x63, 0x4b, 0x65,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x42, 0x0a, 0x1e, 0x74, 0x68, 0x69, 0x72, 0x74, 0x79, 0x5f,
	0x64, 0x61, 0x79, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x69, 0x6e, 0x63,
	0x65, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1a, 0x74,
	0x68, 0x69, 0x72, 0x74, 0x79, 0x44, 0x61, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x53,
	0x69, 0x6e, 0x63, 0x65, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6d, 0x61,
	0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x68, 0x6d, 0x61,
	0x63, 0x4b, 0x65, 0x79, 0x1a, 0x65, 0x0a, 0x08, 0x48, 0x6d, 0x61, 0x63, 0x4b, 0x65, 0x79, 0x73,
	0x12, 0x59, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x41, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x6d, 0x61, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x48, 0x6d, 0x61, 0x63, 0x4b, 0x65, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x7b, 0x0a, 0x0d, 0x48,
	0x6d, 0x61, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x54,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e,
	0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x6d, 0x61, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x48, 0x6d, 0x61, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0xd7, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d,
	0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x78, 0x6d, 0x74, 0x70, 0x2f, 0x78, 0x6d, 0x74, 0x70, 0x64, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x61, 0x70, 0x69, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x58, 0x4b, 0x58, 0xaa, 0x02, 0x13, 0x58,
	0x6d, 0x74, 0x70, 0x2e, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x41, 0x70, 0x69, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x13, 0x58, 0x6d, 0x74, 0x70, 0x5c, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1f, 0x58, 0x6d, 0x74, 0x70, 0x5c,
	0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x15, 0x58, 0x6d, 0x74,
	0x70, 0x3a, 0x3a, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x41, 0x70, 0x69, 0x3a, 0x3a,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_keystore_api_v1_keystore_proto_rawDescOnce sync.Once
	file_keystore_api_v1_keystore_proto_rawDescData []byte
)

func file_keystore_api_v1_keystore_proto_rawDescGZIP() []byte {
	file_keystore_api_v1_keystore_proto_rawDescOnce.Do(func() {
		file_keystore_api_v1_keystore_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_keystore_api_v1_keystore_proto_rawDesc), len(file_keystore_api_v1_keystore_proto_rawDesc)))
	})
	return file_keystore_api_v1_keystore_proto_rawDescData
}

var file_keystore_api_v1_keystore_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_keystore_api_v1_keystore_proto_goTypes = []any{
	(*GetConversationHmacKeysRequest)(nil),              // 0: xmtp.keystore_api.v1.GetConversationHmacKeysRequest
	(*GetConversationHmacKeysResponse)(nil),             // 1: xmtp.keystore_api.v1.GetConversationHmacKeysResponse
	(*GetConversationHmacKeysResponse_HmacKeyData)(nil), // 2: xmtp.keystore_api.v1.GetConversationHmacKeysResponse.HmacKeyData
	(*GetConversationHmacKeysResponse_HmacKeys)(nil),    // 3: xmtp.keystore_api.v1.GetConversationHmacKeysResponse.HmacKeys
	nil, // 4: xmtp.keystore_api.v1.GetConversationHmacKeysResponse.HmacKeysEntry
}
var file_keystore_api_v1_keystore_proto_depIdxs = []int32{
	4, // 0: xmtp.keystore_api.v1.GetConversationHmacKeysResponse.hmac_keys:type_name -> xmtp.keystore_api.v1.GetConversationHmacKeysResponse.HmacKeysEntry
	2, // 1: xmtp.keystore_api.v1.GetConversationHmacKeysResponse.HmacKeys.values:type_name -> xmtp.keystore_api.v1.GetConversationHmacKeysResponse.HmacKeyData
	3, // 2: xmtp.keystore_api.v1.GetConversationHmacKeysResponse.HmacKeysEntry.value:type_name -> xmtp.keystore_api.v1.GetConversationHmacKeysResponse.HmacKeys
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_keystore_api_v1_keystore_proto_init() }
func file_keystore_api_v1_keystore_proto_init() {
	if File_keystore_api_v1_keystore_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_keystore_api_v1_keystore_proto_rawDesc), len(file_keystore_api_v1_keystore_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_keystore_api_v1_keystore_proto_goTypes,
		DependencyIndexes: file_keystore_api_v1_keystore_proto_depIdxs,
		MessageInfos:      file_keystore_api_v1_keystore_proto_msgTypes,
	}.Build()
	File_keystore_api_v1_keystore_proto = out.File
	file_keystore_api_v1_keystore_proto_goTypes = nil
	file_keystore_api_v1_keystore_proto_depIdxs = nil
}
