// Signature is a generic structure for public key signatures.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: message_contents/frames.proto

package message_contents

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The message that will be signed by the Client and returned inside the
// `action_body` field of the FrameAction message
type FrameActionBody struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The URL of the frame that was clicked
	// May be different from `post_url`
	FrameUrl string `protobuf:"bytes,1,opt,name=frame_url,json=frameUrl,proto3" json:"frame_url,omitempty"`
	// The 1-indexed button that was clicked
	ButtonIndex int32 `protobuf:"varint,2,opt,name=button_index,json=buttonIndex,proto3" json:"button_index,omitempty"`
	// Timestamp of the click in milliseconds since the epoch
	//
	// Deprecated: Marked as deprecated in message_contents/frames.proto.
	Timestamp uint64 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// A unique identifier for the conversation, not tied to anything on the
	// network. Will not match the topic or conversation_id
	OpaqueConversationIdentifier string `protobuf:"bytes,4,opt,name=opaque_conversation_identifier,json=opaqueConversationIdentifier,proto3" json:"opaque_conversation_identifier,omitempty"`
	// Unix timestamp
	UnixTimestamp uint32 `protobuf:"varint,5,opt,name=unix_timestamp,json=unixTimestamp,proto3" json:"unix_timestamp,omitempty"`
	// Input text from a text input field
	InputText string `protobuf:"bytes,6,opt,name=input_text,json=inputText,proto3" json:"input_text,omitempty"`
	// A state serialized to a string (for example via JSON.stringify()). Maximum 4096 bytes.
	State string `protobuf:"bytes,7,opt,name=state,proto3" json:"state,omitempty"`
	// A 0x wallet address
	Address string `protobuf:"bytes,8,opt,name=address,proto3" json:"address,omitempty"`
	// A hash from a transaction
	TransactionId string `protobuf:"bytes,9,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrameActionBody) Reset() {
	*x = FrameActionBody{}
	mi := &file_message_contents_frames_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrameActionBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameActionBody) ProtoMessage() {}

func (x *FrameActionBody) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_frames_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameActionBody.ProtoReflect.Descriptor instead.
func (*FrameActionBody) Descriptor() ([]byte, []int) {
	return file_message_contents_frames_proto_rawDescGZIP(), []int{0}
}

func (x *FrameActionBody) GetFrameUrl() string {
	if x != nil {
		return x.FrameUrl
	}
	return ""
}

func (x *FrameActionBody) GetButtonIndex() int32 {
	if x != nil {
		return x.ButtonIndex
	}
	return 0
}

// Deprecated: Marked as deprecated in message_contents/frames.proto.
func (x *FrameActionBody) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *FrameActionBody) GetOpaqueConversationIdentifier() string {
	if x != nil {
		return x.OpaqueConversationIdentifier
	}
	return ""
}

func (x *FrameActionBody) GetUnixTimestamp() uint32 {
	if x != nil {
		return x.UnixTimestamp
	}
	return 0
}

func (x *FrameActionBody) GetInputText() string {
	if x != nil {
		return x.InputText
	}
	return ""
}

func (x *FrameActionBody) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *FrameActionBody) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *FrameActionBody) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

// The outer payload that will be sent as the `messageBytes` in the
// `trusted_data` part of the Frames message
type FrameAction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in message_contents/frames.proto.
	Signature *Signature `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	// The SignedPublicKeyBundle of the signer, used to link the XMTP signature
	// with a blockchain account through a chain of signatures.
	//
	// Deprecated: Marked as deprecated in message_contents/frames.proto.
	SignedPublicKeyBundle *SignedPublicKeyBundle `protobuf:"bytes,2,opt,name=signed_public_key_bundle,json=signedPublicKeyBundle,proto3" json:"signed_public_key_bundle,omitempty"`
	// Serialized FrameActionBody message, so that the signature verification can
	// happen on a byte-perfect representation of the message
	ActionBody []byte `protobuf:"bytes,3,opt,name=action_body,json=actionBody,proto3" json:"action_body,omitempty"`
	// The installation signature
	InstallationSignature []byte `protobuf:"bytes,4,opt,name=installation_signature,json=installationSignature,proto3" json:"installation_signature,omitempty"`
	// The public installation id used to sign.
	InstallationId []byte `protobuf:"bytes,5,opt,name=installation_id,json=installationId,proto3" json:"installation_id,omitempty"`
	// The inbox id of the installation used to sign.
	InboxId       string `protobuf:"bytes,6,opt,name=inbox_id,json=inboxId,proto3" json:"inbox_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrameAction) Reset() {
	*x = FrameAction{}
	mi := &file_message_contents_frames_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrameAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameAction) ProtoMessage() {}

func (x *FrameAction) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_frames_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameAction.ProtoReflect.Descriptor instead.
func (*FrameAction) Descriptor() ([]byte, []int) {
	return file_message_contents_frames_proto_rawDescGZIP(), []int{1}
}

// Deprecated: Marked as deprecated in message_contents/frames.proto.
func (x *FrameAction) GetSignature() *Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

// Deprecated: Marked as deprecated in message_contents/frames.proto.
func (x *FrameAction) GetSignedPublicKeyBundle() *SignedPublicKeyBundle {
	if x != nil {
		return x.SignedPublicKeyBundle
	}
	return nil
}

func (x *FrameAction) GetActionBody() []byte {
	if x != nil {
		return x.ActionBody
	}
	return nil
}

func (x *FrameAction) GetInstallationSignature() []byte {
	if x != nil {
		return x.InstallationSignature
	}
	return nil
}

func (x *FrameAction) GetInstallationId() []byte {
	if x != nil {
		return x.InstallationId
	}
	return nil
}

func (x *FrameAction) GetInboxId() string {
	if x != nil {
		return x.InboxId
	}
	return ""
}

var File_message_contents_frames_proto protoreflect.FileDescriptor

const file_message_contents_frames_proto_rawDesc = "" +
	"\n" +
	"\x1dmessage_contents/frames.proto\x12\x15xmtp.message_contents\x1a!message_contents/public_key.proto\x1a message_contents/signature.proto\"\xd6\x02\n" +
	"\x0fFrameActionBody\x12\x1b\n" +
	"\tframe_url\x18\x01 \x01(\tR\bframeUrl\x12!\n" +
	"\fbutton_index\x18\x02 \x01(\x05R\vbuttonIndex\x12 \n" +
	"\ttimestamp\x18\x03 \x01(\x04B\x02\x18\x01R\ttimestamp\x12D\n" +
	"\x1eopaque_conversation_identifier\x18\x04 \x01(\tR\x1copaqueConversationIdentifier\x12%\n" +
	"\x0eunix_timestamp\x18\x05 \x01(\rR\runixTimestamp\x12\x1d\n" +
	"\n" +
	"input_text\x18\x06 \x01(\tR\tinputText\x12\x14\n" +
	"\x05state\x18\a \x01(\tR\x05state\x12\x18\n" +
	"\aaddress\x18\b \x01(\tR\aaddress\x12%\n" +
	"\x0etransaction_id\x18\t \x01(\tR\rtransactionId\"\xd8\x02\n" +
	"\vFrameAction\x12B\n" +
	"\tsignature\x18\x01 \x01(\v2 .xmtp.message_contents.SignatureB\x02\x18\x01R\tsignature\x12i\n" +
	"\x18signed_public_key_bundle\x18\x02 \x01(\v2,.xmtp.message_contents.SignedPublicKeyBundleB\x02\x18\x01R\x15signedPublicKeyBundle\x12\x1f\n" +
	"\vaction_body\x18\x03 \x01(\fR\n" +
	"actionBody\x125\n" +
	"\x16installation_signature\x18\x04 \x01(\fR\x15installationSignature\x12'\n" +
	"\x0finstallation_id\x18\x05 \x01(\fR\x0einstallationId\x12\x19\n" +
	"\binbox_id\x18\x06 \x01(\tR\ainboxIdB\xcb\x01\n" +
	"\x19com.xmtp.message_contentsB\vFramesProtoP\x01Z0github.com/xmtp/xmtpd/pkg/proto/message_contents\xa2\x02\x03XMX\xaa\x02\x14Xmtp.MessageContents\xca\x02\x14Xmtp\\MessageContents\xe2\x02 Xmtp\\MessageContents\\GPBMetadata\xea\x02\x15Xmtp::MessageContentsb\x06proto3"

var (
	file_message_contents_frames_proto_rawDescOnce sync.Once
	file_message_contents_frames_proto_rawDescData []byte
)

func file_message_contents_frames_proto_rawDescGZIP() []byte {
	file_message_contents_frames_proto_rawDescOnce.Do(func() {
		file_message_contents_frames_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_message_contents_frames_proto_rawDesc), len(file_message_contents_frames_proto_rawDesc)))
	})
	return file_message_contents_frames_proto_rawDescData
}

var file_message_contents_frames_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_message_contents_frames_proto_goTypes = []any{
	(*FrameActionBody)(nil),       // 0: xmtp.message_contents.FrameActionBody
	(*FrameAction)(nil),           // 1: xmtp.message_contents.FrameAction
	(*Signature)(nil),             // 2: xmtp.message_contents.Signature
	(*SignedPublicKeyBundle)(nil), // 3: xmtp.message_contents.SignedPublicKeyBundle
}
var file_message_contents_frames_proto_depIdxs = []int32{
	2, // 0: xmtp.message_contents.FrameAction.signature:type_name -> xmtp.message_contents.Signature
	3, // 1: xmtp.message_contents.FrameAction.signed_public_key_bundle:type_name -> xmtp.message_contents.SignedPublicKeyBundle
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_message_contents_frames_proto_init() }
func file_message_contents_frames_proto_init() {
	if File_message_contents_frames_proto != nil {
		return
	}
	file_message_contents_public_key_proto_init()
	file_message_contents_signature_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_message_contents_frames_proto_rawDesc), len(file_message_contents_frames_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_contents_frames_proto_goTypes,
		DependencyIndexes: file_message_contents_frames_proto_depIdxs,
		MessageInfos:      file_message_contents_frames_proto_msgTypes,
	}.Build()
	File_message_contents_frames_proto = out.File
	file_message_contents_frames_proto_goTypes = nil
	file_message_contents_frames_proto_depIdxs = nil
}
