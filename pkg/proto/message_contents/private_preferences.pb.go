// Private Key Storage
//
// Following definitions are not used in the protocol, instead they provide a
// way for encoding private keys for storage.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: message_contents/private_preferences.proto

package message_contents

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PrivatePreferencesAction is a message used to update the client's preference
// store.
type PrivatePreferencesAction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to MessageType:
	//
	//	*PrivatePreferencesAction_AllowAddress_
	//	*PrivatePreferencesAction_DenyAddress_
	//	*PrivatePreferencesAction_AllowGroup_
	//	*PrivatePreferencesAction_DenyGroup_
	//	*PrivatePreferencesAction_AllowInboxId_
	//	*PrivatePreferencesAction_DenyInboxId_
	MessageType   isPrivatePreferencesAction_MessageType `protobuf_oneof:"message_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrivatePreferencesAction) Reset() {
	*x = PrivatePreferencesAction{}
	mi := &file_message_contents_private_preferences_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrivatePreferencesAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivatePreferencesAction) ProtoMessage() {}

func (x *PrivatePreferencesAction) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_private_preferences_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivatePreferencesAction.ProtoReflect.Descriptor instead.
func (*PrivatePreferencesAction) Descriptor() ([]byte, []int) {
	return file_message_contents_private_preferences_proto_rawDescGZIP(), []int{0}
}

func (x *PrivatePreferencesAction) GetMessageType() isPrivatePreferencesAction_MessageType {
	if x != nil {
		return x.MessageType
	}
	return nil
}

func (x *PrivatePreferencesAction) GetAllowAddress() *PrivatePreferencesAction_AllowAddress {
	if x != nil {
		if x, ok := x.MessageType.(*PrivatePreferencesAction_AllowAddress_); ok {
			return x.AllowAddress
		}
	}
	return nil
}

func (x *PrivatePreferencesAction) GetDenyAddress() *PrivatePreferencesAction_DenyAddress {
	if x != nil {
		if x, ok := x.MessageType.(*PrivatePreferencesAction_DenyAddress_); ok {
			return x.DenyAddress
		}
	}
	return nil
}

func (x *PrivatePreferencesAction) GetAllowGroup() *PrivatePreferencesAction_AllowGroup {
	if x != nil {
		if x, ok := x.MessageType.(*PrivatePreferencesAction_AllowGroup_); ok {
			return x.AllowGroup
		}
	}
	return nil
}

func (x *PrivatePreferencesAction) GetDenyGroup() *PrivatePreferencesAction_DenyGroup {
	if x != nil {
		if x, ok := x.MessageType.(*PrivatePreferencesAction_DenyGroup_); ok {
			return x.DenyGroup
		}
	}
	return nil
}

func (x *PrivatePreferencesAction) GetAllowInboxId() *PrivatePreferencesAction_AllowInboxId {
	if x != nil {
		if x, ok := x.MessageType.(*PrivatePreferencesAction_AllowInboxId_); ok {
			return x.AllowInboxId
		}
	}
	return nil
}

func (x *PrivatePreferencesAction) GetDenyInboxId() *PrivatePreferencesAction_DenyInboxId {
	if x != nil {
		if x, ok := x.MessageType.(*PrivatePreferencesAction_DenyInboxId_); ok {
			return x.DenyInboxId
		}
	}
	return nil
}

type isPrivatePreferencesAction_MessageType interface {
	isPrivatePreferencesAction_MessageType()
}

type PrivatePreferencesAction_AllowAddress_ struct {
	AllowAddress *PrivatePreferencesAction_AllowAddress `protobuf:"bytes,1,opt,name=allow_address,json=allowAddress,proto3,oneof"`
}

type PrivatePreferencesAction_DenyAddress_ struct {
	DenyAddress *PrivatePreferencesAction_DenyAddress `protobuf:"bytes,2,opt,name=deny_address,json=denyAddress,proto3,oneof"`
}

type PrivatePreferencesAction_AllowGroup_ struct {
	AllowGroup *PrivatePreferencesAction_AllowGroup `protobuf:"bytes,3,opt,name=allow_group,json=allowGroup,proto3,oneof"`
}

type PrivatePreferencesAction_DenyGroup_ struct {
	DenyGroup *PrivatePreferencesAction_DenyGroup `protobuf:"bytes,4,opt,name=deny_group,json=denyGroup,proto3,oneof"`
}

type PrivatePreferencesAction_AllowInboxId_ struct {
	AllowInboxId *PrivatePreferencesAction_AllowInboxId `protobuf:"bytes,5,opt,name=allow_inbox_id,json=allowInboxId,proto3,oneof"`
}

type PrivatePreferencesAction_DenyInboxId_ struct {
	DenyInboxId *PrivatePreferencesAction_DenyInboxId `protobuf:"bytes,6,opt,name=deny_inbox_id,json=denyInboxId,proto3,oneof"`
}

func (*PrivatePreferencesAction_AllowAddress_) isPrivatePreferencesAction_MessageType() {}

func (*PrivatePreferencesAction_DenyAddress_) isPrivatePreferencesAction_MessageType() {}

func (*PrivatePreferencesAction_AllowGroup_) isPrivatePreferencesAction_MessageType() {}

func (*PrivatePreferencesAction_DenyGroup_) isPrivatePreferencesAction_MessageType() {}

func (*PrivatePreferencesAction_AllowInboxId_) isPrivatePreferencesAction_MessageType() {}

func (*PrivatePreferencesAction_DenyInboxId_) isPrivatePreferencesAction_MessageType() {}

// The payload that goes over the wire
type PrivatePreferencesPayload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Version:
	//
	//	*PrivatePreferencesPayload_V1
	Version       isPrivatePreferencesPayload_Version `protobuf_oneof:"version"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrivatePreferencesPayload) Reset() {
	*x = PrivatePreferencesPayload{}
	mi := &file_message_contents_private_preferences_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrivatePreferencesPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivatePreferencesPayload) ProtoMessage() {}

func (x *PrivatePreferencesPayload) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_private_preferences_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivatePreferencesPayload.ProtoReflect.Descriptor instead.
func (*PrivatePreferencesPayload) Descriptor() ([]byte, []int) {
	return file_message_contents_private_preferences_proto_rawDescGZIP(), []int{1}
}

func (x *PrivatePreferencesPayload) GetVersion() isPrivatePreferencesPayload_Version {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *PrivatePreferencesPayload) GetV1() *Ciphertext {
	if x != nil {
		if x, ok := x.Version.(*PrivatePreferencesPayload_V1); ok {
			return x.V1
		}
	}
	return nil
}

type isPrivatePreferencesPayload_Version interface {
	isPrivatePreferencesPayload_Version()
}

type PrivatePreferencesPayload_V1 struct {
	V1 *Ciphertext `protobuf:"bytes,1,opt,name=v1,proto3,oneof"`
}

func (*PrivatePreferencesPayload_V1) isPrivatePreferencesPayload_Version() {}

// Allow 1:1 direct message (DM) access
type PrivatePreferencesAction_AllowAddress struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Add the given wallet addresses to the allow list
	WalletAddresses []string `protobuf:"bytes,1,rep,name=wallet_addresses,json=walletAddresses,proto3" json:"wallet_addresses,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PrivatePreferencesAction_AllowAddress) Reset() {
	*x = PrivatePreferencesAction_AllowAddress{}
	mi := &file_message_contents_private_preferences_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrivatePreferencesAction_AllowAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivatePreferencesAction_AllowAddress) ProtoMessage() {}

func (x *PrivatePreferencesAction_AllowAddress) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_private_preferences_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivatePreferencesAction_AllowAddress.ProtoReflect.Descriptor instead.
func (*PrivatePreferencesAction_AllowAddress) Descriptor() ([]byte, []int) {
	return file_message_contents_private_preferences_proto_rawDescGZIP(), []int{0, 0}
}

func (x *PrivatePreferencesAction_AllowAddress) GetWalletAddresses() []string {
	if x != nil {
		return x.WalletAddresses
	}
	return nil
}

// Deny (block) 1:1 direct message (DM) access
type PrivatePreferencesAction_DenyAddress struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Add the given wallet addresses to the deny list
	WalletAddresses []string `protobuf:"bytes,1,rep,name=wallet_addresses,json=walletAddresses,proto3" json:"wallet_addresses,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PrivatePreferencesAction_DenyAddress) Reset() {
	*x = PrivatePreferencesAction_DenyAddress{}
	mi := &file_message_contents_private_preferences_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrivatePreferencesAction_DenyAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivatePreferencesAction_DenyAddress) ProtoMessage() {}

func (x *PrivatePreferencesAction_DenyAddress) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_private_preferences_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivatePreferencesAction_DenyAddress.ProtoReflect.Descriptor instead.
func (*PrivatePreferencesAction_DenyAddress) Descriptor() ([]byte, []int) {
	return file_message_contents_private_preferences_proto_rawDescGZIP(), []int{0, 1}
}

func (x *PrivatePreferencesAction_DenyAddress) GetWalletAddresses() []string {
	if x != nil {
		return x.WalletAddresses
	}
	return nil
}

// Allow V3 1:1 direct message (DM) access
type PrivatePreferencesAction_AllowInboxId struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Add the given inbox id to the allow list
	InboxIds      []string `protobuf:"bytes,1,rep,name=inbox_ids,json=inboxIds,proto3" json:"inbox_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrivatePreferencesAction_AllowInboxId) Reset() {
	*x = PrivatePreferencesAction_AllowInboxId{}
	mi := &file_message_contents_private_preferences_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrivatePreferencesAction_AllowInboxId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivatePreferencesAction_AllowInboxId) ProtoMessage() {}

func (x *PrivatePreferencesAction_AllowInboxId) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_private_preferences_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivatePreferencesAction_AllowInboxId.ProtoReflect.Descriptor instead.
func (*PrivatePreferencesAction_AllowInboxId) Descriptor() ([]byte, []int) {
	return file_message_contents_private_preferences_proto_rawDescGZIP(), []int{0, 2}
}

func (x *PrivatePreferencesAction_AllowInboxId) GetInboxIds() []string {
	if x != nil {
		return x.InboxIds
	}
	return nil
}

// Deny (block) V3 1:1 direct message (DM) access
type PrivatePreferencesAction_DenyInboxId struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Add the given inbox id to the deny list
	InboxIds      []string `protobuf:"bytes,1,rep,name=inbox_ids,json=inboxIds,proto3" json:"inbox_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrivatePreferencesAction_DenyInboxId) Reset() {
	*x = PrivatePreferencesAction_DenyInboxId{}
	mi := &file_message_contents_private_preferences_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrivatePreferencesAction_DenyInboxId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivatePreferencesAction_DenyInboxId) ProtoMessage() {}

func (x *PrivatePreferencesAction_DenyInboxId) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_private_preferences_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivatePreferencesAction_DenyInboxId.ProtoReflect.Descriptor instead.
func (*PrivatePreferencesAction_DenyInboxId) Descriptor() ([]byte, []int) {
	return file_message_contents_private_preferences_proto_rawDescGZIP(), []int{0, 3}
}

func (x *PrivatePreferencesAction_DenyInboxId) GetInboxIds() []string {
	if x != nil {
		return x.InboxIds
	}
	return nil
}

// Allow Group access
type PrivatePreferencesAction_AllowGroup struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Add the given group_ids to the allow list
	GroupIds      []string `protobuf:"bytes,1,rep,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrivatePreferencesAction_AllowGroup) Reset() {
	*x = PrivatePreferencesAction_AllowGroup{}
	mi := &file_message_contents_private_preferences_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrivatePreferencesAction_AllowGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivatePreferencesAction_AllowGroup) ProtoMessage() {}

func (x *PrivatePreferencesAction_AllowGroup) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_private_preferences_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivatePreferencesAction_AllowGroup.ProtoReflect.Descriptor instead.
func (*PrivatePreferencesAction_AllowGroup) Descriptor() ([]byte, []int) {
	return file_message_contents_private_preferences_proto_rawDescGZIP(), []int{0, 4}
}

func (x *PrivatePreferencesAction_AllowGroup) GetGroupIds() []string {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

// Deny (deny) Group access
type PrivatePreferencesAction_DenyGroup struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Add the given group_ids to the deny list
	GroupIds      []string `protobuf:"bytes,1,rep,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrivatePreferencesAction_DenyGroup) Reset() {
	*x = PrivatePreferencesAction_DenyGroup{}
	mi := &file_message_contents_private_preferences_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrivatePreferencesAction_DenyGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivatePreferencesAction_DenyGroup) ProtoMessage() {}

func (x *PrivatePreferencesAction_DenyGroup) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_private_preferences_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivatePreferencesAction_DenyGroup.ProtoReflect.Descriptor instead.
func (*PrivatePreferencesAction_DenyGroup) Descriptor() ([]byte, []int) {
	return file_message_contents_private_preferences_proto_rawDescGZIP(), []int{0, 5}
}

func (x *PrivatePreferencesAction_DenyGroup) GetGroupIds() []string {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

var File_message_contents_private_preferences_proto protoreflect.FileDescriptor

const file_message_contents_private_preferences_proto_rawDesc = "" +
	"\n" +
	"*message_contents/private_preferences.proto\x12\x15xmtp.message_contents\x1a!message_contents/ciphertext.proto\"\x98\a\n" +
	"\x18PrivatePreferencesAction\x12c\n" +
	"\rallow_address\x18\x01 \x01(\v2<.xmtp.message_contents.PrivatePreferencesAction.AllowAddressH\x00R\fallowAddress\x12`\n" +
	"\fdeny_address\x18\x02 \x01(\v2;.xmtp.message_contents.PrivatePreferencesAction.DenyAddressH\x00R\vdenyAddress\x12]\n" +
	"\vallow_group\x18\x03 \x01(\v2:.xmtp.message_contents.PrivatePreferencesAction.AllowGroupH\x00R\n" +
	"allowGroup\x12Z\n" +
	"\n" +
	"deny_group\x18\x04 \x01(\v29.xmtp.message_contents.PrivatePreferencesAction.DenyGroupH\x00R\tdenyGroup\x12d\n" +
	"\x0eallow_inbox_id\x18\x05 \x01(\v2<.xmtp.message_contents.PrivatePreferencesAction.AllowInboxIdH\x00R\fallowInboxId\x12a\n" +
	"\rdeny_inbox_id\x18\x06 \x01(\v2;.xmtp.message_contents.PrivatePreferencesAction.DenyInboxIdH\x00R\vdenyInboxId\x1a9\n" +
	"\fAllowAddress\x12)\n" +
	"\x10wallet_addresses\x18\x01 \x03(\tR\x0fwalletAddresses\x1a8\n" +
	"\vDenyAddress\x12)\n" +
	"\x10wallet_addresses\x18\x01 \x03(\tR\x0fwalletAddresses\x1a+\n" +
	"\fAllowInboxId\x12\x1b\n" +
	"\tinbox_ids\x18\x01 \x03(\tR\binboxIds\x1a*\n" +
	"\vDenyInboxId\x12\x1b\n" +
	"\tinbox_ids\x18\x01 \x03(\tR\binboxIds\x1a)\n" +
	"\n" +
	"AllowGroup\x12\x1b\n" +
	"\tgroup_ids\x18\x01 \x03(\tR\bgroupIds\x1a(\n" +
	"\tDenyGroup\x12\x1b\n" +
	"\tgroup_ids\x18\x01 \x03(\tR\bgroupIdsB\x0e\n" +
	"\fmessage_type\"[\n" +
	"\x19PrivatePreferencesPayload\x123\n" +
	"\x02v1\x18\x01 \x01(\v2!.xmtp.message_contents.CiphertextH\x00R\x02v1B\t\n" +
	"\aversionB\xd7\x01\n" +
	"\x19com.xmtp.message_contentsB\x17PrivatePreferencesProtoP\x01Z0github.com/xmtp/xmtpd/pkg/proto/message_contents\xa2\x02\x03XMX\xaa\x02\x14Xmtp.MessageContents\xca\x02\x14Xmtp\\MessageContents\xe2\x02 Xmtp\\MessageContents\\GPBMetadata\xea\x02\x15Xmtp::MessageContentsb\x06proto3"

var (
	file_message_contents_private_preferences_proto_rawDescOnce sync.Once
	file_message_contents_private_preferences_proto_rawDescData []byte
)

func file_message_contents_private_preferences_proto_rawDescGZIP() []byte {
	file_message_contents_private_preferences_proto_rawDescOnce.Do(func() {
		file_message_contents_private_preferences_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_message_contents_private_preferences_proto_rawDesc), len(file_message_contents_private_preferences_proto_rawDesc)))
	})
	return file_message_contents_private_preferences_proto_rawDescData
}

var file_message_contents_private_preferences_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_message_contents_private_preferences_proto_goTypes = []any{
	(*PrivatePreferencesAction)(nil),              // 0: xmtp.message_contents.PrivatePreferencesAction
	(*PrivatePreferencesPayload)(nil),             // 1: xmtp.message_contents.PrivatePreferencesPayload
	(*PrivatePreferencesAction_AllowAddress)(nil), // 2: xmtp.message_contents.PrivatePreferencesAction.AllowAddress
	(*PrivatePreferencesAction_DenyAddress)(nil),  // 3: xmtp.message_contents.PrivatePreferencesAction.DenyAddress
	(*PrivatePreferencesAction_AllowInboxId)(nil), // 4: xmtp.message_contents.PrivatePreferencesAction.AllowInboxId
	(*PrivatePreferencesAction_DenyInboxId)(nil),  // 5: xmtp.message_contents.PrivatePreferencesAction.DenyInboxId
	(*PrivatePreferencesAction_AllowGroup)(nil),   // 6: xmtp.message_contents.PrivatePreferencesAction.AllowGroup
	(*PrivatePreferencesAction_DenyGroup)(nil),    // 7: xmtp.message_contents.PrivatePreferencesAction.DenyGroup
	(*Ciphertext)(nil),                            // 8: xmtp.message_contents.Ciphertext
}
var file_message_contents_private_preferences_proto_depIdxs = []int32{
	2, // 0: xmtp.message_contents.PrivatePreferencesAction.allow_address:type_name -> xmtp.message_contents.PrivatePreferencesAction.AllowAddress
	3, // 1: xmtp.message_contents.PrivatePreferencesAction.deny_address:type_name -> xmtp.message_contents.PrivatePreferencesAction.DenyAddress
	6, // 2: xmtp.message_contents.PrivatePreferencesAction.allow_group:type_name -> xmtp.message_contents.PrivatePreferencesAction.AllowGroup
	7, // 3: xmtp.message_contents.PrivatePreferencesAction.deny_group:type_name -> xmtp.message_contents.PrivatePreferencesAction.DenyGroup
	4, // 4: xmtp.message_contents.PrivatePreferencesAction.allow_inbox_id:type_name -> xmtp.message_contents.PrivatePreferencesAction.AllowInboxId
	5, // 5: xmtp.message_contents.PrivatePreferencesAction.deny_inbox_id:type_name -> xmtp.message_contents.PrivatePreferencesAction.DenyInboxId
	8, // 6: xmtp.message_contents.PrivatePreferencesPayload.v1:type_name -> xmtp.message_contents.Ciphertext
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_message_contents_private_preferences_proto_init() }
func file_message_contents_private_preferences_proto_init() {
	if File_message_contents_private_preferences_proto != nil {
		return
	}
	file_message_contents_ciphertext_proto_init()
	file_message_contents_private_preferences_proto_msgTypes[0].OneofWrappers = []any{
		(*PrivatePreferencesAction_AllowAddress_)(nil),
		(*PrivatePreferencesAction_DenyAddress_)(nil),
		(*PrivatePreferencesAction_AllowGroup_)(nil),
		(*PrivatePreferencesAction_DenyGroup_)(nil),
		(*PrivatePreferencesAction_AllowInboxId_)(nil),
		(*PrivatePreferencesAction_DenyInboxId_)(nil),
	}
	file_message_contents_private_preferences_proto_msgTypes[1].OneofWrappers = []any{
		(*PrivatePreferencesPayload_V1)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_message_contents_private_preferences_proto_rawDesc), len(file_message_contents_private_preferences_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_contents_private_preferences_proto_goTypes,
		DependencyIndexes: file_message_contents_private_preferences_proto_depIdxs,
		MessageInfos:      file_message_contents_private_preferences_proto_msgTypes,
	}.Build()
	File_message_contents_private_preferences_proto = out.File
	file_message_contents_private_preferences_proto_goTypes = nil
	file_message_contents_private_preferences_proto_depIdxs = nil
}
