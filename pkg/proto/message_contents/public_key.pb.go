// Structure for representing public keys of different types,
// including signatures used to authenticate the keys.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: message_contents/public_key.proto

package message_contents

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// UnsignedPublicKey represents a generalized public key,
// defined as a union to support cryptographic algorithm agility.
type UnsignedPublicKey struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	CreatedNs uint64                 `protobuf:"varint,1,opt,name=created_ns,json=createdNs,proto3" json:"created_ns,omitempty"`
	// Types that are valid to be assigned to Union:
	//
	//	*UnsignedPublicKey_Secp256K1Uncompressed_
	Union         isUnsignedPublicKey_Union `protobuf_oneof:"union"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnsignedPublicKey) Reset() {
	*x = UnsignedPublicKey{}
	mi := &file_message_contents_public_key_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnsignedPublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsignedPublicKey) ProtoMessage() {}

func (x *UnsignedPublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_public_key_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsignedPublicKey.ProtoReflect.Descriptor instead.
func (*UnsignedPublicKey) Descriptor() ([]byte, []int) {
	return file_message_contents_public_key_proto_rawDescGZIP(), []int{0}
}

func (x *UnsignedPublicKey) GetCreatedNs() uint64 {
	if x != nil {
		return x.CreatedNs
	}
	return 0
}

func (x *UnsignedPublicKey) GetUnion() isUnsignedPublicKey_Union {
	if x != nil {
		return x.Union
	}
	return nil
}

func (x *UnsignedPublicKey) GetSecp256K1Uncompressed() *UnsignedPublicKey_Secp256K1Uncompressed {
	if x != nil {
		if x, ok := x.Union.(*UnsignedPublicKey_Secp256K1Uncompressed_); ok {
			return x.Secp256K1Uncompressed
		}
	}
	return nil
}

type isUnsignedPublicKey_Union interface {
	isUnsignedPublicKey_Union()
}

type UnsignedPublicKey_Secp256K1Uncompressed_ struct {
	Secp256K1Uncompressed *UnsignedPublicKey_Secp256K1Uncompressed `protobuf:"bytes,3,opt,name=secp256k1_uncompressed,json=secp256k1Uncompressed,proto3,oneof"`
}

func (*UnsignedPublicKey_Secp256K1Uncompressed_) isUnsignedPublicKey_Union() {}

// SignedPublicKey
type SignedPublicKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KeyBytes      []byte                 `protobuf:"bytes,1,opt,name=key_bytes,json=keyBytes,proto3" json:"key_bytes,omitempty"` // embeds an UnsignedPublicKey
	Signature     *Signature             `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`               // signs key_bytes
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignedPublicKey) Reset() {
	*x = SignedPublicKey{}
	mi := &file_message_contents_public_key_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignedPublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedPublicKey) ProtoMessage() {}

func (x *SignedPublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_public_key_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedPublicKey.ProtoReflect.Descriptor instead.
func (*SignedPublicKey) Descriptor() ([]byte, []int) {
	return file_message_contents_public_key_proto_rawDescGZIP(), []int{1}
}

func (x *SignedPublicKey) GetKeyBytes() []byte {
	if x != nil {
		return x.KeyBytes
	}
	return nil
}

func (x *SignedPublicKey) GetSignature() *Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

// PublicKeyBundle packages the cryptographic keys associated with a wallet.
type SignedPublicKeyBundle struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identity key MUST be signed by the wallet.
	IdentityKey *SignedPublicKey `protobuf:"bytes,1,opt,name=identity_key,json=identityKey,proto3" json:"identity_key,omitempty"`
	// Pre-key MUST be signed by the identity key.
	PreKey        *SignedPublicKey `protobuf:"bytes,2,opt,name=pre_key,json=preKey,proto3" json:"pre_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignedPublicKeyBundle) Reset() {
	*x = SignedPublicKeyBundle{}
	mi := &file_message_contents_public_key_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignedPublicKeyBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedPublicKeyBundle) ProtoMessage() {}

func (x *SignedPublicKeyBundle) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_public_key_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedPublicKeyBundle.ProtoReflect.Descriptor instead.
func (*SignedPublicKeyBundle) Descriptor() ([]byte, []int) {
	return file_message_contents_public_key_proto_rawDescGZIP(), []int{2}
}

func (x *SignedPublicKeyBundle) GetIdentityKey() *SignedPublicKey {
	if x != nil {
		return x.IdentityKey
	}
	return nil
}

func (x *SignedPublicKeyBundle) GetPreKey() *SignedPublicKey {
	if x != nil {
		return x.PreKey
	}
	return nil
}

// PublicKey represents a generalized public key,
// defined as a union to support cryptographic algorithm agility.
type PublicKey struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Timestamp uint64                 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Signature *Signature             `protobuf:"bytes,2,opt,name=signature,proto3,oneof" json:"signature,omitempty"`
	// Types that are valid to be assigned to Union:
	//
	//	*PublicKey_Secp256K1Uncompressed_
	Union         isPublicKey_Union `protobuf_oneof:"union"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublicKey) Reset() {
	*x = PublicKey{}
	mi := &file_message_contents_public_key_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKey) ProtoMessage() {}

func (x *PublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_public_key_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKey.ProtoReflect.Descriptor instead.
func (*PublicKey) Descriptor() ([]byte, []int) {
	return file_message_contents_public_key_proto_rawDescGZIP(), []int{3}
}

func (x *PublicKey) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PublicKey) GetSignature() *Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *PublicKey) GetUnion() isPublicKey_Union {
	if x != nil {
		return x.Union
	}
	return nil
}

func (x *PublicKey) GetSecp256K1Uncompressed() *PublicKey_Secp256K1Uncompressed {
	if x != nil {
		if x, ok := x.Union.(*PublicKey_Secp256K1Uncompressed_); ok {
			return x.Secp256K1Uncompressed
		}
	}
	return nil
}

type isPublicKey_Union interface {
	isPublicKey_Union()
}

type PublicKey_Secp256K1Uncompressed_ struct {
	Secp256K1Uncompressed *PublicKey_Secp256K1Uncompressed `protobuf:"bytes,3,opt,name=secp256k1_uncompressed,json=secp256k1Uncompressed,proto3,oneof"`
}

func (*PublicKey_Secp256K1Uncompressed_) isPublicKey_Union() {}

// PublicKeyBundle packages the cryptographic keys associated with a wallet,
// both senders and recipients are identified by their key bundles.
type PublicKeyBundle struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identity key MUST be signed by the wallet.
	IdentityKey *PublicKey `protobuf:"bytes,1,opt,name=identity_key,json=identityKey,proto3" json:"identity_key,omitempty"`
	// Pre-key MUST be signed by the identity key.
	PreKey        *PublicKey `protobuf:"bytes,2,opt,name=pre_key,json=preKey,proto3" json:"pre_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublicKeyBundle) Reset() {
	*x = PublicKeyBundle{}
	mi := &file_message_contents_public_key_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicKeyBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKeyBundle) ProtoMessage() {}

func (x *PublicKeyBundle) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_public_key_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKeyBundle.ProtoReflect.Descriptor instead.
func (*PublicKeyBundle) Descriptor() ([]byte, []int) {
	return file_message_contents_public_key_proto_rawDescGZIP(), []int{4}
}

func (x *PublicKeyBundle) GetIdentityKey() *PublicKey {
	if x != nil {
		return x.IdentityKey
	}
	return nil
}

func (x *PublicKeyBundle) GetPreKey() *PublicKey {
	if x != nil {
		return x.PreKey
	}
	return nil
}

// EC: SECP256k1
type UnsignedPublicKey_Secp256K1Uncompressed struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// uncompressed point with prefix (0x04) [ P || X || Y ], 65 bytes
	Bytes         []byte `protobuf:"bytes,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnsignedPublicKey_Secp256K1Uncompressed) Reset() {
	*x = UnsignedPublicKey_Secp256K1Uncompressed{}
	mi := &file_message_contents_public_key_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnsignedPublicKey_Secp256K1Uncompressed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsignedPublicKey_Secp256K1Uncompressed) ProtoMessage() {}

func (x *UnsignedPublicKey_Secp256K1Uncompressed) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_public_key_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsignedPublicKey_Secp256K1Uncompressed.ProtoReflect.Descriptor instead.
func (*UnsignedPublicKey_Secp256K1Uncompressed) Descriptor() ([]byte, []int) {
	return file_message_contents_public_key_proto_rawDescGZIP(), []int{0, 0}
}

func (x *UnsignedPublicKey_Secp256K1Uncompressed) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

// The key bytes
type PublicKey_Secp256K1Uncompressed struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// uncompressed point with prefix (0x04) [ P || X || Y ], 65 bytes
	Bytes         []byte `protobuf:"bytes,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublicKey_Secp256K1Uncompressed) Reset() {
	*x = PublicKey_Secp256K1Uncompressed{}
	mi := &file_message_contents_public_key_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicKey_Secp256K1Uncompressed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKey_Secp256K1Uncompressed) ProtoMessage() {}

func (x *PublicKey_Secp256K1Uncompressed) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_public_key_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKey_Secp256K1Uncompressed.ProtoReflect.Descriptor instead.
func (*PublicKey_Secp256K1Uncompressed) Descriptor() ([]byte, []int) {
	return file_message_contents_public_key_proto_rawDescGZIP(), []int{3, 0}
}

func (x *PublicKey_Secp256K1Uncompressed) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

var File_message_contents_public_key_proto protoreflect.FileDescriptor

const file_message_contents_public_key_proto_rawDesc = "" +
	"\n" +
	"!message_contents/public_key.proto\x12\x15xmtp.message_contents\x1a message_contents/signature.proto\"\xe3\x01\n" +
	"\x11UnsignedPublicKey\x12\x1d\n" +
	"\n" +
	"created_ns\x18\x01 \x01(\x04R\tcreatedNs\x12w\n" +
	"\x16secp256k1_uncompressed\x18\x03 \x01(\v2>.xmtp.message_contents.UnsignedPublicKey.Secp256k1UncompressedH\x00R\x15secp256k1Uncompressed\x1a-\n" +
	"\x15Secp256k1Uncompressed\x12\x14\n" +
	"\x05bytes\x18\x01 \x01(\fR\x05bytesB\a\n" +
	"\x05union\"n\n" +
	"\x0fSignedPublicKey\x12\x1b\n" +
	"\tkey_bytes\x18\x01 \x01(\fR\bkeyBytes\x12>\n" +
	"\tsignature\x18\x02 \x01(\v2 .xmtp.message_contents.SignatureR\tsignature\"\xa3\x01\n" +
	"\x15SignedPublicKeyBundle\x12I\n" +
	"\fidentity_key\x18\x01 \x01(\v2&.xmtp.message_contents.SignedPublicKeyR\videntityKey\x12?\n" +
	"\apre_key\x18\x02 \x01(\v2&.xmtp.message_contents.SignedPublicKeyR\x06preKey\"\xa5\x02\n" +
	"\tPublicKey\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x04R\ttimestamp\x12C\n" +
	"\tsignature\x18\x02 \x01(\v2 .xmtp.message_contents.SignatureH\x01R\tsignature\x88\x01\x01\x12o\n" +
	"\x16secp256k1_uncompressed\x18\x03 \x01(\v26.xmtp.message_contents.PublicKey.Secp256k1UncompressedH\x00R\x15secp256k1Uncompressed\x1a-\n" +
	"\x15Secp256k1Uncompressed\x12\x14\n" +
	"\x05bytes\x18\x01 \x01(\fR\x05bytesB\a\n" +
	"\x05unionB\f\n" +
	"\n" +
	"_signature\"\x91\x01\n" +
	"\x0fPublicKeyBundle\x12C\n" +
	"\fidentity_key\x18\x01 \x01(\v2 .xmtp.message_contents.PublicKeyR\videntityKey\x129\n" +
	"\apre_key\x18\x02 \x01(\v2 .xmtp.message_contents.PublicKeyR\x06preKeyB\xce\x01\n" +
	"\x19com.xmtp.message_contentsB\x0ePublicKeyProtoP\x01Z0github.com/xmtp/xmtpd/pkg/proto/message_contents\xa2\x02\x03XMX\xaa\x02\x14Xmtp.MessageContents\xca\x02\x14Xmtp\\MessageContents\xe2\x02 Xmtp\\MessageContents\\GPBMetadata\xea\x02\x15Xmtp::MessageContentsb\x06proto3"

var (
	file_message_contents_public_key_proto_rawDescOnce sync.Once
	file_message_contents_public_key_proto_rawDescData []byte
)

func file_message_contents_public_key_proto_rawDescGZIP() []byte {
	file_message_contents_public_key_proto_rawDescOnce.Do(func() {
		file_message_contents_public_key_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_message_contents_public_key_proto_rawDesc), len(file_message_contents_public_key_proto_rawDesc)))
	})
	return file_message_contents_public_key_proto_rawDescData
}

var file_message_contents_public_key_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_message_contents_public_key_proto_goTypes = []any{
	(*UnsignedPublicKey)(nil),                       // 0: xmtp.message_contents.UnsignedPublicKey
	(*SignedPublicKey)(nil),                         // 1: xmtp.message_contents.SignedPublicKey
	(*SignedPublicKeyBundle)(nil),                   // 2: xmtp.message_contents.SignedPublicKeyBundle
	(*PublicKey)(nil),                               // 3: xmtp.message_contents.PublicKey
	(*PublicKeyBundle)(nil),                         // 4: xmtp.message_contents.PublicKeyBundle
	(*UnsignedPublicKey_Secp256K1Uncompressed)(nil), // 5: xmtp.message_contents.UnsignedPublicKey.Secp256k1Uncompressed
	(*PublicKey_Secp256K1Uncompressed)(nil),         // 6: xmtp.message_contents.PublicKey.Secp256k1Uncompressed
	(*Signature)(nil),                               // 7: xmtp.message_contents.Signature
}
var file_message_contents_public_key_proto_depIdxs = []int32{
	5, // 0: xmtp.message_contents.UnsignedPublicKey.secp256k1_uncompressed:type_name -> xmtp.message_contents.UnsignedPublicKey.Secp256k1Uncompressed
	7, // 1: xmtp.message_contents.SignedPublicKey.signature:type_name -> xmtp.message_contents.Signature
	1, // 2: xmtp.message_contents.SignedPublicKeyBundle.identity_key:type_name -> xmtp.message_contents.SignedPublicKey
	1, // 3: xmtp.message_contents.SignedPublicKeyBundle.pre_key:type_name -> xmtp.message_contents.SignedPublicKey
	7, // 4: xmtp.message_contents.PublicKey.signature:type_name -> xmtp.message_contents.Signature
	6, // 5: xmtp.message_contents.PublicKey.secp256k1_uncompressed:type_name -> xmtp.message_contents.PublicKey.Secp256k1Uncompressed
	3, // 6: xmtp.message_contents.PublicKeyBundle.identity_key:type_name -> xmtp.message_contents.PublicKey
	3, // 7: xmtp.message_contents.PublicKeyBundle.pre_key:type_name -> xmtp.message_contents.PublicKey
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_message_contents_public_key_proto_init() }
func file_message_contents_public_key_proto_init() {
	if File_message_contents_public_key_proto != nil {
		return
	}
	file_message_contents_signature_proto_init()
	file_message_contents_public_key_proto_msgTypes[0].OneofWrappers = []any{
		(*UnsignedPublicKey_Secp256K1Uncompressed_)(nil),
	}
	file_message_contents_public_key_proto_msgTypes[3].OneofWrappers = []any{
		(*PublicKey_Secp256K1Uncompressed_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_message_contents_public_key_proto_rawDesc), len(file_message_contents_public_key_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_contents_public_key_proto_goTypes,
		DependencyIndexes: file_message_contents_public_key_proto_depIdxs,
		MessageInfos:      file_message_contents_public_key_proto_msgTypes,
	}.Build()
	File_message_contents_public_key_proto = out.File
	file_message_contents_public_key_proto_goTypes = nil
	file_message_contents_public_key_proto_depIdxs = nil
}
