{
  "swagger": "2.0",
  "info": {
    "title": "MlsApi",
    "version": "1.0"
  },
  "tags": [
    {
      "name": "MlsApi"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/mls/v1/fetch-key-packages": {
      "post": {
        "summary": "Get one or more Key Packages by installation_id",
        "operationId": "MlsApi_FetchKeyPackages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1FetchKeyPackagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1FetchKeyPackagesRequest"
            }
          }
        ],
        "tags": [
          "MlsApi"
        ]
      }
    },
    "/mls/v1/get-identity-updates": {
      "post": {
        "summary": "Used to check for changes related to members of a group.\nWould return an array of any new installations associated with the wallet\naddress, and any revocations that have happened.",
        "operationId": "MlsApi_GetIdentityUpdates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/xmtpmlsapiv1GetIdentityUpdatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/xmtpmlsapiv1GetIdentityUpdatesRequest"
            }
          }
        ],
        "tags": [
          "MlsApi"
        ]
      }
    },
    "/mls/v1/query-group-messages": {
      "post": {
        "summary": "Query stored group messages",
        "operationId": "MlsApi_QueryGroupMessages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1QueryGroupMessagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1QueryGroupMessagesRequest"
            }
          }
        ],
        "tags": [
          "MlsApi"
        ]
      }
    },
    "/mls/v1/query-welcome-messages": {
      "post": {
        "summary": "Query stored group messages",
        "operationId": "MlsApi_QueryWelcomeMessages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1QueryWelcomeMessagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1QueryWelcomeMessagesRequest"
            }
          }
        ],
        "tags": [
          "MlsApi"
        ]
      }
    },
    "/mls/v1/register-installation": {
      "post": {
        "summary": "Register a new installation, which would be validated before storage",
        "operationId": "MlsApi_RegisterInstallation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RegisterInstallationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RegisterInstallationRequest"
            }
          }
        ],
        "tags": [
          "MlsApi"
        ]
      }
    },
    "/mls/v1/revoke-installation": {
      "post": {
        "summary": "Would delete all key packages associated with the installation and mark\nthe installation as having been revoked",
        "operationId": "MlsApi_RevokeInstallation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RevokeInstallationRequest"
            }
          }
        ],
        "tags": [
          "MlsApi"
        ]
      }
    },
    "/mls/v1/send-group-messages": {
      "post": {
        "summary": "Send a MLS payload, that would be validated before being stored to the\nnetwork",
        "operationId": "MlsApi_SendGroupMessages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SendGroupMessagesRequest"
            }
          }
        ],
        "tags": [
          "MlsApi"
        ]
      }
    },
    "/mls/v1/send-welcome-messages": {
      "post": {
        "summary": "Send a batch of welcome messages",
        "operationId": "MlsApi_SendWelcomeMessages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SendWelcomeMessagesRequest"
            }
          }
        ],
        "tags": [
          "MlsApi"
        ]
      }
    },
    "/mls/v1/subscribe-group-messages": {
      "post": {
        "summary": "Subscribe stream of new group messages",
        "operationId": "MlsApi_SubscribeGroupMessages",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/apiv1GroupMessage"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of apiv1GroupMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SubscribeGroupMessagesRequest"
            }
          }
        ],
        "tags": [
          "MlsApi"
        ]
      }
    },
    "/mls/v1/subscribe-welcome-messages": {
      "post": {
        "summary": "Subscribe stream of new welcome messages",
        "operationId": "MlsApi_SubscribeWelcomeMessages",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1WelcomeMessage"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of v1WelcomeMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SubscribeWelcomeMessagesRequest"
            }
          }
        ],
        "tags": [
          "MlsApi"
        ]
      }
    },
    "/mls/v1/upload-key-package": {
      "post": {
        "summary": "Upload a new KeyPackage, which would be validated before storage",
        "operationId": "MlsApi_UploadKeyPackage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UploadKeyPackageRequest"
            }
          }
        ],
        "tags": [
          "MlsApi"
        ]
      }
    }
  },
  "definitions": {
    "GetIdentityUpdatesResponseNewInstallationUpdate": {
      "type": "object",
      "properties": {
        "installationKey": {
          "type": "string",
          "format": "byte"
        },
        "credentialIdentity": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "A new installation key was seen for the first time by the nodes"
    },
    "GetIdentityUpdatesResponseRevokedInstallationUpdate": {
      "type": "object",
      "properties": {
        "installationKey": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "An installation was revoked"
    },
    "GetIdentityUpdatesResponseUpdate": {
      "type": "object",
      "properties": {
        "timestampNs": {
          "type": "string",
          "format": "uint64"
        },
        "newInstallation": {
          "$ref": "#/definitions/GetIdentityUpdatesResponseNewInstallationUpdate"
        },
        "revokedInstallation": {
          "$ref": "#/definitions/GetIdentityUpdatesResponseRevokedInstallationUpdate"
        }
      },
      "title": "A wrapper for any update to the wallet"
    },
    "GetIdentityUpdatesResponseWalletUpdates": {
      "type": "object",
      "properties": {
        "updates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetIdentityUpdatesResponseUpdate"
          }
        }
      },
      "title": "A wrapper for the updates for a single wallet"
    },
    "SignatureECDSACompact": {
      "type": "object",
      "properties": {
        "bytes": {
          "type": "string",
          "format": "byte",
          "title": "compact representation [ R || S ], 64 bytes"
        },
        "recovery": {
          "type": "integer",
          "format": "int64",
          "title": "recovery bit"
        }
      },
      "title": "ECDSA signature bytes and the recovery bit"
    },
    "SignatureWalletECDSACompact": {
      "type": "object",
      "properties": {
        "bytes": {
          "type": "string",
          "format": "byte",
          "title": "compact representation [ R || S ], 64 bytes"
        },
        "recovery": {
          "type": "integer",
          "format": "int64",
          "title": "recovery bit"
        }
      },
      "description": "ECDSA signature bytes and the recovery bit\nproduced by xmtp-js::PublicKey.signWithWallet function, i.e.\nEIP-191 signature of a \"Create Identity\" message with the key embedded.\nUsed to sign identity keys."
    },
    "apiv1GroupMessage": {
      "type": "object",
      "properties": {
        "v1": {
          "$ref": "#/definitions/v1GroupMessageV1"
        }
      },
      "title": "Full representation of a group message"
    },
    "mlsapiv1PagingInfo": {
      "type": "object",
      "properties": {
        "direction": {
          "$ref": "#/definitions/mlsapiv1SortDirection"
        },
        "limit": {
          "type": "integer",
          "format": "int64"
        },
        "idCursor": {
          "type": "string",
          "format": "uint64"
        }
      },
      "title": "Pagination config for queries"
    },
    "mlsapiv1SortDirection": {
      "type": "string",
      "enum": [
        "SORT_DIRECTION_UNSPECIFIED",
        "SORT_DIRECTION_ASCENDING",
        "SORT_DIRECTION_DESCENDING"
      ],
      "default": "SORT_DIRECTION_UNSPECIFIED",
      "title": "Sort direction for queries"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1FetchKeyPackagesRequest": {
      "type": "object",
      "properties": {
        "installationKeys": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          },
          "title": "The caller can provide an array of installation keys, and the API\nwill return one key package for each installation associated with each\ninstallation key"
        }
      },
      "title": "Fetch one or more key packages"
    },
    "v1FetchKeyPackagesResponse": {
      "type": "object",
      "properties": {
        "keyPackages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FetchKeyPackagesResponseKeyPackage"
          },
          "description": "Returns one key package per installation in the original order of the\nrequest. If any installations are missing key packages, an empty entry is\nleft in their respective spots in the array."
        }
      },
      "title": "The response to a FetchKeyPackagesRequest"
    },
    "v1FetchKeyPackagesResponseKeyPackage": {
      "type": "object",
      "properties": {
        "keyPackageTlsSerialized": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "An individual key package"
    },
    "v1GroupMessageInput": {
      "type": "object",
      "properties": {
        "v1": {
          "$ref": "#/definitions/v1GroupMessageInputV1"
        }
      },
      "title": "Input type for a group message"
    },
    "v1GroupMessageInputV1": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte",
          "title": "Serialized MlsProtocolMessage"
        },
        "senderHmac": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "Version 1 of the GroupMessageInput payload format"
    },
    "v1GroupMessageV1": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "createdNs": {
          "type": "string",
          "format": "uint64"
        },
        "groupId": {
          "type": "string",
          "format": "byte"
        },
        "data": {
          "type": "string",
          "format": "byte"
        },
        "senderHmac": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "Version 1 of the GroupMessage format"
    },
    "v1KeyPackageUpload": {
      "type": "object",
      "properties": {
        "keyPackageTlsSerialized": {
          "type": "string",
          "format": "byte",
          "description": "The owner's wallet address would be extracted from the identity\ncredential in the key package, and all signatures would be validated."
        }
      },
      "description": "This would be a serialized MLS key package that the node would\n parse, validate, and then store.",
      "title": "A wrapper around the Key Package bytes"
    },
    "v1QueryGroupMessagesRequest": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "format": "byte"
        },
        "pagingInfo": {
          "$ref": "#/definitions/mlsapiv1PagingInfo"
        }
      },
      "title": "Request for group message queries"
    },
    "v1QueryGroupMessagesResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiv1GroupMessage"
          }
        },
        "pagingInfo": {
          "$ref": "#/definitions/mlsapiv1PagingInfo"
        }
      },
      "title": "Response for group message queries"
    },
    "v1QueryWelcomeMessagesRequest": {
      "type": "object",
      "properties": {
        "installationKey": {
          "type": "string",
          "format": "byte"
        },
        "pagingInfo": {
          "$ref": "#/definitions/mlsapiv1PagingInfo"
        }
      },
      "title": "Request for welcome message queries"
    },
    "v1QueryWelcomeMessagesResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WelcomeMessage"
          }
        },
        "pagingInfo": {
          "$ref": "#/definitions/mlsapiv1PagingInfo"
        }
      },
      "title": "Response for welcome message queries"
    },
    "v1RegisterInstallationRequest": {
      "type": "object",
      "properties": {
        "keyPackage": {
          "$ref": "#/definitions/v1KeyPackageUpload",
          "title": "The Key Package contains all information needed to register an installation"
        },
        "isInboxIdCredential": {
          "type": "boolean"
        }
      },
      "title": "Register a new installation"
    },
    "v1RegisterInstallationResponse": {
      "type": "object",
      "properties": {
        "installationKey": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "The response to a RegisterInstallationRequest"
    },
    "v1RevokeInstallationRequest": {
      "type": "object",
      "properties": {
        "installationKey": {
          "type": "string",
          "format": "byte"
        },
        "walletSignature": {
          "$ref": "#/definitions/xmtpmessage_contentsSignature",
          "title": "All revocations must be validated with a wallet signature over the\ninstallation_id being revoked (and some sort of standard prologue)"
        }
      },
      "title": "Revoke an installation"
    },
    "v1SendGroupMessagesRequest": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GroupMessageInput"
          }
        }
      },
      "title": "Send a batch of MLS messages"
    },
    "v1SendWelcomeMessagesRequest": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WelcomeMessageInput"
          }
        }
      },
      "title": "Send a batch of welcome messages"
    },
    "v1SubscribeGroupMessagesRequest": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SubscribeGroupMessagesRequestFilter"
          }
        }
      },
      "title": "Request for subscribing to group messages"
    },
    "v1SubscribeGroupMessagesRequestFilter": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "format": "byte"
        },
        "idCursor": {
          "type": "string",
          "format": "uint64"
        }
      },
      "title": "Subscription filter"
    },
    "v1SubscribeWelcomeMessagesRequest": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SubscribeWelcomeMessagesRequestFilter"
          }
        }
      },
      "title": "Request for subscribing to welcome messages"
    },
    "v1SubscribeWelcomeMessagesRequestFilter": {
      "type": "object",
      "properties": {
        "installationKey": {
          "type": "string",
          "format": "byte"
        },
        "idCursor": {
          "type": "string",
          "format": "uint64"
        }
      },
      "title": "Subscription filter"
    },
    "v1UploadKeyPackageRequest": {
      "type": "object",
      "properties": {
        "keyPackage": {
          "$ref": "#/definitions/v1KeyPackageUpload",
          "title": "An individual key package upload request"
        },
        "isInboxIdCredential": {
          "type": "boolean"
        }
      },
      "title": "Upload a new key packages"
    },
    "v1WelcomeMessage": {
      "type": "object",
      "properties": {
        "v1": {
          "$ref": "#/definitions/v1WelcomeMessageV1"
        }
      },
      "title": "Full representation of a welcome message"
    },
    "v1WelcomeMessageInput": {
      "type": "object",
      "properties": {
        "v1": {
          "$ref": "#/definitions/v1WelcomeMessageInputV1"
        }
      },
      "title": "Input type for a welcome message"
    },
    "v1WelcomeMessageInputV1": {
      "type": "object",
      "properties": {
        "installationKey": {
          "type": "string",
          "format": "byte"
        },
        "data": {
          "type": "string",
          "format": "byte"
        },
        "hpkePublicKey": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "Version 1 of the WelcomeMessageInput format"
    },
    "v1WelcomeMessageV1": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "createdNs": {
          "type": "string",
          "format": "uint64"
        },
        "installationKey": {
          "type": "string",
          "format": "byte"
        },
        "data": {
          "type": "string",
          "format": "byte"
        },
        "hpkePublicKey": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "Version 1 of the WelcomeMessage format"
    },
    "xmtpmessage_contentsSignature": {
      "type": "object",
      "properties": {
        "ecdsaCompact": {
          "$ref": "#/definitions/SignatureECDSACompact"
        },
        "walletEcdsaCompact": {
          "$ref": "#/definitions/SignatureWalletECDSACompact"
        }
      },
      "description": "Signature represents a generalized public key signature,\ndefined as a union to support cryptographic algorithm agility."
    },
    "xmtpmlsapiv1GetIdentityUpdatesRequest": {
      "type": "object",
      "properties": {
        "accountAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "startTimeNs": {
          "type": "string",
          "format": "uint64"
        }
      },
      "title": "Get all updates for an identity since the specified time"
    },
    "xmtpmlsapiv1GetIdentityUpdatesResponse": {
      "type": "object",
      "properties": {
        "updates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetIdentityUpdatesResponseWalletUpdates"
          },
          "title": "A list of updates (or empty objects if no changes) in the original order\nof the request"
        }
      },
      "title": "Used to get any new or revoked installations for a list of wallet addresses"
    }
  }
}
