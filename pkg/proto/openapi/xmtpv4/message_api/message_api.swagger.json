{
  "swagger": "2.0",
  "info": {
    "title": "xmtpv4/message_api/message_api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ReplicationApi"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/mls/v2/get-inbox-ids": {
      "post": {
        "summary": "Get inbox ids",
        "operationId": "ReplicationApi_GetInboxIds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/xmtpxmtpv4GetInboxIdsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/xmtpxmtpv4GetInboxIdsRequest"
            }
          }
        ],
        "tags": [
          "ReplicationApi"
        ]
      }
    },
    "/mls/v2/publish-envelopes": {
      "post": {
        "summary": "Publish envelope",
        "operationId": "ReplicationApi_PublishEnvelopes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/xmtpv4PublishEnvelopesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/xmtpv4PublishEnvelopesRequest"
            }
          }
        ],
        "tags": [
          "ReplicationApi"
        ]
      }
    },
    "/mls/v2/query-envelopes": {
      "post": {
        "summary": "Query envelopes",
        "operationId": "ReplicationApi_QueryEnvelopes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/xmtpv4QueryEnvelopesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/xmtpv4QueryEnvelopesRequest"
            }
          }
        ],
        "tags": [
          "ReplicationApi"
        ]
      }
    },
    "/mls/v2/subscribe-envelopes": {
      "post": {
        "summary": "Subscribe to envelopes",
        "operationId": "ReplicationApi_SubscribeEnvelopes",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/xmtpv4SubscribeEnvelopesResponse"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of xmtpv4SubscribeEnvelopesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/xmtpv4SubscribeEnvelopesRequest"
            }
          }
        ],
        "tags": [
          "ReplicationApi"
        ]
      }
    }
  },
  "definitions": {
    "associationsRecoverableEcdsaSignature": {
      "type": "object",
      "properties": {
        "bytes": {
          "type": "string",
          "format": "byte",
          "title": "65-bytes [ R || S || V ], with recovery id as the last byte"
        }
      },
      "title": "RecoverableEcdsaSignature for EIP-191 and V2 signatures"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "xmtpv4BlockchainProof": {
      "type": "object",
      "properties": {
        "blockNumber": {
          "type": "string",
          "format": "uint64"
        },
        "publisherNodeId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "An alternative to a signature for blockchain payloads"
    },
    "xmtpv4EnvelopesQuery": {
      "type": "object",
      "properties": {
        "topics": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          },
          "title": "Client queries"
        },
        "originatorNodeIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "title": "Node queries"
        },
        "lastSeen": {
          "$ref": "#/definitions/xmtpv4VectorClock"
        }
      },
      "title": "Query for envelopes, shared by query and subscribe endpoints\nEither topics or originator_node_ids may be set, but not both"
    },
    "xmtpv4OriginatorEnvelope": {
      "type": "object",
      "properties": {
        "unsignedOriginatorEnvelope": {
          "type": "string",
          "format": "byte",
          "title": "Protobuf serialized"
        },
        "originatorSignature": {
          "$ref": "#/definitions/associationsRecoverableEcdsaSignature"
        },
        "blockchainProof": {
          "$ref": "#/definitions/xmtpv4BlockchainProof"
        }
      },
      "title": "Signed originator envelope"
    },
    "xmtpv4PayerEnvelope": {
      "type": "object",
      "properties": {
        "unsignedClientEnvelope": {
          "type": "string",
          "format": "byte",
          "title": "Protobuf serialized"
        },
        "payerSignature": {
          "$ref": "#/definitions/associationsRecoverableEcdsaSignature"
        }
      },
      "title": "Wraps client envelope with payer signature"
    },
    "xmtpv4PublishEnvelopesRequest": {
      "type": "object",
      "properties": {
        "payerEnvelopes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/xmtpv4PayerEnvelope"
          }
        }
      }
    },
    "xmtpv4PublishEnvelopesResponse": {
      "type": "object",
      "properties": {
        "originatorEnvelopes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/xmtpv4OriginatorEnvelope"
          }
        }
      }
    },
    "xmtpv4QueryEnvelopesRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/xmtpv4EnvelopesQuery"
        },
        "limit": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Query envelopes request"
    },
    "xmtpv4QueryEnvelopesResponse": {
      "type": "object",
      "properties": {
        "envelopes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/xmtpv4OriginatorEnvelope"
          }
        }
      },
      "title": "Query envelopes response"
    },
    "xmtpv4SubscribeEnvelopesRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/xmtpv4EnvelopesQuery"
        }
      },
      "title": "Batch subscribe to envelopes"
    },
    "xmtpv4SubscribeEnvelopesResponse": {
      "type": "object",
      "properties": {
        "envelopes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/xmtpv4OriginatorEnvelope"
          }
        }
      },
      "title": "Streamed response for batch subscribe - can be multiple envelopes at once"
    },
    "xmtpv4VectorClock": {
      "type": "object",
      "properties": {
        "nodeIdToSequenceId": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "uint64"
          }
        }
      },
      "description": "The last seen entry per originator. Originators that have not been seen are omitted.\nEntries MUST be sorted in ascending order, so that smaller node ID's appear first."
    },
    "xmtpxmtpv4GetInboxIdsRequest": {
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/xmtpxmtpv4GetInboxIdsRequestRequest"
          }
        }
      },
      "title": "Request to retrieve the XIDs for the given addresses"
    },
    "xmtpxmtpv4GetInboxIdsRequestRequest": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        }
      },
      "title": "A single request for a given address"
    },
    "xmtpxmtpv4GetInboxIdsResponse": {
      "type": "object",
      "properties": {
        "responses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/xmtpxmtpv4GetInboxIdsResponseResponse"
          }
        }
      },
      "title": "Response with the XIDs for the requested addresses"
    },
    "xmtpxmtpv4GetInboxIdsResponseResponse": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "inboxId": {
          "type": "string"
        }
      },
      "title": "A single response for a given address"
    }
  }
}
