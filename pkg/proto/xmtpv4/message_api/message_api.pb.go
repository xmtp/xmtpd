// Message API for XMTP V4

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: xmtpv4/message_api/message_api.proto

package message_api

import (
	associations "github.com/xmtp/xmtpd/pkg/proto/identity/associations"
	envelopes "github.com/xmtp/xmtpd/pkg/proto/xmtpv4/envelopes"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Query for envelopes, shared by query and subscribe endpoints
// Either topics or originator_node_ids may be set, but not both
type EnvelopesQuery struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Client queries
	Topics [][]byte `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	// Node queries
	OriginatorNodeIds []uint32          `protobuf:"varint,2,rep,packed,name=originator_node_ids,json=originatorNodeIds,proto3" json:"originator_node_ids,omitempty"`
	LastSeen          *envelopes.Cursor `protobuf:"bytes,3,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *EnvelopesQuery) Reset() {
	*x = EnvelopesQuery{}
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnvelopesQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvelopesQuery) ProtoMessage() {}

func (x *EnvelopesQuery) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvelopesQuery.ProtoReflect.Descriptor instead.
func (*EnvelopesQuery) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_message_api_proto_rawDescGZIP(), []int{0}
}

func (x *EnvelopesQuery) GetTopics() [][]byte {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *EnvelopesQuery) GetOriginatorNodeIds() []uint32 {
	if x != nil {
		return x.OriginatorNodeIds
	}
	return nil
}

func (x *EnvelopesQuery) GetLastSeen() *envelopes.Cursor {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

// Batch subscribe to envelopes
type SubscribeEnvelopesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         *EnvelopesQuery        `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeEnvelopesRequest) Reset() {
	*x = SubscribeEnvelopesRequest{}
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeEnvelopesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeEnvelopesRequest) ProtoMessage() {}

func (x *SubscribeEnvelopesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeEnvelopesRequest.ProtoReflect.Descriptor instead.
func (*SubscribeEnvelopesRequest) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_message_api_proto_rawDescGZIP(), []int{1}
}

func (x *SubscribeEnvelopesRequest) GetQuery() *EnvelopesQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

// Streamed response for batch subscribe - can be multiple envelopes at once
type SubscribeEnvelopesResponse struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Envelopes     []*envelopes.OriginatorEnvelope `protobuf:"bytes,1,rep,name=envelopes,proto3" json:"envelopes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeEnvelopesResponse) Reset() {
	*x = SubscribeEnvelopesResponse{}
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeEnvelopesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeEnvelopesResponse) ProtoMessage() {}

func (x *SubscribeEnvelopesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeEnvelopesResponse.ProtoReflect.Descriptor instead.
func (*SubscribeEnvelopesResponse) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_message_api_proto_rawDescGZIP(), []int{2}
}

func (x *SubscribeEnvelopesResponse) GetEnvelopes() []*envelopes.OriginatorEnvelope {
	if x != nil {
		return x.Envelopes
	}
	return nil
}

// Query envelopes request
type QueryEnvelopesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         *EnvelopesQuery        `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Limit         uint32                 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryEnvelopesRequest) Reset() {
	*x = QueryEnvelopesRequest{}
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryEnvelopesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEnvelopesRequest) ProtoMessage() {}

func (x *QueryEnvelopesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryEnvelopesRequest.ProtoReflect.Descriptor instead.
func (*QueryEnvelopesRequest) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_message_api_proto_rawDescGZIP(), []int{3}
}

func (x *QueryEnvelopesRequest) GetQuery() *EnvelopesQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *QueryEnvelopesRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Query envelopes response
type QueryEnvelopesResponse struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Envelopes     []*envelopes.OriginatorEnvelope `protobuf:"bytes,1,rep,name=envelopes,proto3" json:"envelopes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryEnvelopesResponse) Reset() {
	*x = QueryEnvelopesResponse{}
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryEnvelopesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEnvelopesResponse) ProtoMessage() {}

func (x *QueryEnvelopesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryEnvelopesResponse.ProtoReflect.Descriptor instead.
func (*QueryEnvelopesResponse) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_message_api_proto_rawDescGZIP(), []int{4}
}

func (x *QueryEnvelopesResponse) GetEnvelopes() []*envelopes.OriginatorEnvelope {
	if x != nil {
		return x.Envelopes
	}
	return nil
}

type PublishPayerEnvelopesRequest struct {
	state          protoimpl.MessageState     `protogen:"open.v1"`
	PayerEnvelopes []*envelopes.PayerEnvelope `protobuf:"bytes,1,rep,name=payer_envelopes,json=payerEnvelopes,proto3" json:"payer_envelopes,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PublishPayerEnvelopesRequest) Reset() {
	*x = PublishPayerEnvelopesRequest{}
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishPayerEnvelopesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishPayerEnvelopesRequest) ProtoMessage() {}

func (x *PublishPayerEnvelopesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishPayerEnvelopesRequest.ProtoReflect.Descriptor instead.
func (*PublishPayerEnvelopesRequest) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_message_api_proto_rawDescGZIP(), []int{5}
}

func (x *PublishPayerEnvelopesRequest) GetPayerEnvelopes() []*envelopes.PayerEnvelope {
	if x != nil {
		return x.PayerEnvelopes
	}
	return nil
}

type PublishPayerEnvelopesResponse struct {
	state               protoimpl.MessageState          `protogen:"open.v1"`
	OriginatorEnvelopes []*envelopes.OriginatorEnvelope `protobuf:"bytes,1,rep,name=originator_envelopes,json=originatorEnvelopes,proto3" json:"originator_envelopes,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *PublishPayerEnvelopesResponse) Reset() {
	*x = PublishPayerEnvelopesResponse{}
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishPayerEnvelopesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishPayerEnvelopesResponse) ProtoMessage() {}

func (x *PublishPayerEnvelopesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishPayerEnvelopesResponse.ProtoReflect.Descriptor instead.
func (*PublishPayerEnvelopesResponse) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_message_api_proto_rawDescGZIP(), []int{6}
}

func (x *PublishPayerEnvelopesResponse) GetOriginatorEnvelopes() []*envelopes.OriginatorEnvelope {
	if x != nil {
		return x.OriginatorEnvelopes
	}
	return nil
}

// Request to retrieve the XIDs for the given addresses
type GetInboxIdsRequest struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Requests      []*GetInboxIdsRequest_Request `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInboxIdsRequest) Reset() {
	*x = GetInboxIdsRequest{}
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInboxIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInboxIdsRequest) ProtoMessage() {}

func (x *GetInboxIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInboxIdsRequest.ProtoReflect.Descriptor instead.
func (*GetInboxIdsRequest) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_message_api_proto_rawDescGZIP(), []int{7}
}

func (x *GetInboxIdsRequest) GetRequests() []*GetInboxIdsRequest_Request {
	if x != nil {
		return x.Requests
	}
	return nil
}

// Response with the XIDs for the requested addresses
type GetInboxIdsResponse struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Responses     []*GetInboxIdsResponse_Response `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInboxIdsResponse) Reset() {
	*x = GetInboxIdsResponse{}
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInboxIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInboxIdsResponse) ProtoMessage() {}

func (x *GetInboxIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInboxIdsResponse.ProtoReflect.Descriptor instead.
func (*GetInboxIdsResponse) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_message_api_proto_rawDescGZIP(), []int{8}
}

func (x *GetInboxIdsResponse) GetResponses() []*GetInboxIdsResponse_Response {
	if x != nil {
		return x.Responses
	}
	return nil
}

// A single request for a given address
type GetInboxIdsRequest_Request struct {
	state          protoimpl.MessageState      `protogen:"open.v1"`
	Identifier     string                      `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	IdentifierKind associations.IdentifierKind `protobuf:"varint,2,opt,name=identifier_kind,json=identifierKind,proto3,enum=xmtp.identity.associations.IdentifierKind" json:"identifier_kind,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetInboxIdsRequest_Request) Reset() {
	*x = GetInboxIdsRequest_Request{}
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInboxIdsRequest_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInboxIdsRequest_Request) ProtoMessage() {}

func (x *GetInboxIdsRequest_Request) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInboxIdsRequest_Request.ProtoReflect.Descriptor instead.
func (*GetInboxIdsRequest_Request) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_message_api_proto_rawDescGZIP(), []int{7, 0}
}

func (x *GetInboxIdsRequest_Request) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *GetInboxIdsRequest_Request) GetIdentifierKind() associations.IdentifierKind {
	if x != nil {
		return x.IdentifierKind
	}
	return associations.IdentifierKind(0)
}

// A single response for a given address
type GetInboxIdsResponse_Response struct {
	state          protoimpl.MessageState      `protogen:"open.v1"`
	Identifier     string                      `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	InboxId        *string                     `protobuf:"bytes,2,opt,name=inbox_id,json=inboxId,proto3,oneof" json:"inbox_id,omitempty"`
	IdentifierKind associations.IdentifierKind `protobuf:"varint,3,opt,name=identifier_kind,json=identifierKind,proto3,enum=xmtp.identity.associations.IdentifierKind" json:"identifier_kind,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetInboxIdsResponse_Response) Reset() {
	*x = GetInboxIdsResponse_Response{}
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInboxIdsResponse_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInboxIdsResponse_Response) ProtoMessage() {}

func (x *GetInboxIdsResponse_Response) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInboxIdsResponse_Response.ProtoReflect.Descriptor instead.
func (*GetInboxIdsResponse_Response) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_message_api_proto_rawDescGZIP(), []int{8, 0}
}

func (x *GetInboxIdsResponse_Response) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *GetInboxIdsResponse_Response) GetInboxId() string {
	if x != nil && x.InboxId != nil {
		return *x.InboxId
	}
	return ""
}

func (x *GetInboxIdsResponse_Response) GetIdentifierKind() associations.IdentifierKind {
	if x != nil {
		return x.IdentifierKind
	}
	return associations.IdentifierKind(0)
}

var File_xmtpv4_message_api_message_api_proto protoreflect.FileDescriptor

const file_xmtpv4_message_api_message_api_proto_rawDesc = "" +
	"\n" +
	"$xmtpv4/message_api/message_api.proto\x12\x17xmtp.xmtpv4.message_api\x1a\x1cgoogle/api/annotations.proto\x1a'identity/associations/association.proto\x1a xmtpv4/envelopes/envelopes.proto\"\x94\x01\n" +
	"\x0eEnvelopesQuery\x12\x16\n" +
	"\x06topics\x18\x01 \x03(\fR\x06topics\x12.\n" +
	"\x13originator_node_ids\x18\x02 \x03(\rR\x11originatorNodeIds\x12:\n" +
	"\tlast_seen\x18\x03 \x01(\v2\x1d.xmtp.xmtpv4.envelopes.CursorR\blastSeen\"Z\n" +
	"\x19SubscribeEnvelopesRequest\x12=\n" +
	"\x05query\x18\x01 \x01(\v2'.xmtp.xmtpv4.message_api.EnvelopesQueryR\x05query\"e\n" +
	"\x1aSubscribeEnvelopesResponse\x12G\n" +
	"\tenvelopes\x18\x01 \x03(\v2).xmtp.xmtpv4.envelopes.OriginatorEnvelopeR\tenvelopes\"l\n" +
	"\x15QueryEnvelopesRequest\x12=\n" +
	"\x05query\x18\x01 \x01(\v2'.xmtp.xmtpv4.message_api.EnvelopesQueryR\x05query\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\rR\x05limit\"a\n" +
	"\x16QueryEnvelopesResponse\x12G\n" +
	"\tenvelopes\x18\x01 \x03(\v2).xmtp.xmtpv4.envelopes.OriginatorEnvelopeR\tenvelopes\"m\n" +
	"\x1cPublishPayerEnvelopesRequest\x12M\n" +
	"\x0fpayer_envelopes\x18\x01 \x03(\v2$.xmtp.xmtpv4.envelopes.PayerEnvelopeR\x0epayerEnvelopes\"}\n" +
	"\x1dPublishPayerEnvelopesResponse\x12\\\n" +
	"\x14originator_envelopes\x18\x01 \x03(\v2).xmtp.xmtpv4.envelopes.OriginatorEnvelopeR\x13originatorEnvelopes\"\xe5\x01\n" +
	"\x12GetInboxIdsRequest\x12O\n" +
	"\brequests\x18\x01 \x03(\v23.xmtp.xmtpv4.message_api.GetInboxIdsRequest.RequestR\brequests\x1a~\n" +
	"\aRequest\x12\x1e\n" +
	"\n" +
	"identifier\x18\x01 \x01(\tR\n" +
	"identifier\x12S\n" +
	"\x0fidentifier_kind\x18\x02 \x01(\x0e2*.xmtp.identity.associations.IdentifierKindR\x0eidentifierKind\"\x99\x02\n" +
	"\x13GetInboxIdsResponse\x12S\n" +
	"\tresponses\x18\x01 \x03(\v25.xmtp.xmtpv4.message_api.GetInboxIdsResponse.ResponseR\tresponses\x1a\xac\x01\n" +
	"\bResponse\x12\x1e\n" +
	"\n" +
	"identifier\x18\x01 \x01(\tR\n" +
	"identifier\x12\x1e\n" +
	"\binbox_id\x18\x02 \x01(\tH\x00R\ainboxId\x88\x01\x01\x12S\n" +
	"\x0fidentifier_kind\x18\x03 \x01(\x0e2*.xmtp.identity.associations.IdentifierKindR\x0eidentifierKindB\v\n" +
	"\t_inbox_id2\x94\x05\n" +
	"\x0eReplicationApi\x12\xa7\x01\n" +
	"\x12SubscribeEnvelopes\x122.xmtp.xmtpv4.message_api.SubscribeEnvelopesRequest\x1a3.xmtp.xmtpv4.message_api.SubscribeEnvelopesResponse\"&\x82\xd3\xe4\x93\x02 :\x01*\"\x1b/mls/v2/subscribe-envelopes0\x01\x12\x95\x01\n" +
	"\x0eQueryEnvelopes\x12..xmtp.xmtpv4.message_api.QueryEnvelopesRequest\x1a/.xmtp.xmtpv4.message_api.QueryEnvelopesResponse\"\"\x82\xd3\xe4\x93\x02\x1c:\x01*\"\x17/mls/v2/query-envelopes\x12\xb2\x01\n" +
	"\x15PublishPayerEnvelopes\x125.xmtp.xmtpv4.message_api.PublishPayerEnvelopesRequest\x1a6.xmtp.xmtpv4.message_api.PublishPayerEnvelopesResponse\"*\x82\xd3\xe4\x93\x02$:\x01*\"\x1f/mls/v2/publish-payer-envelopes\x12\x8a\x01\n" +
	"\vGetInboxIds\x12+.xmtp.xmtpv4.message_api.GetInboxIdsRequest\x1a,.xmtp.xmtpv4.message_api.GetInboxIdsResponse\" \x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/mls/v2/get-inbox-idsB\xdc\x01\n" +
	"\x1bcom.xmtp.xmtpv4.message_apiB\x0fMessageApiProtoP\x01Z2github.com/xmtp/xmtpd/pkg/proto/xmtpv4/message_api\xa2\x02\x03XXM\xaa\x02\x16Xmtp.Xmtpv4.MessageApi\xca\x02\x16Xmtp\\Xmtpv4\\MessageApi\xe2\x02\"Xmtp\\Xmtpv4\\MessageApi\\GPBMetadata\xea\x02\x18Xmtp::Xmtpv4::MessageApib\x06proto3"

var (
	file_xmtpv4_message_api_message_api_proto_rawDescOnce sync.Once
	file_xmtpv4_message_api_message_api_proto_rawDescData []byte
)

func file_xmtpv4_message_api_message_api_proto_rawDescGZIP() []byte {
	file_xmtpv4_message_api_message_api_proto_rawDescOnce.Do(func() {
		file_xmtpv4_message_api_message_api_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_xmtpv4_message_api_message_api_proto_rawDesc), len(file_xmtpv4_message_api_message_api_proto_rawDesc)))
	})
	return file_xmtpv4_message_api_message_api_proto_rawDescData
}

var file_xmtpv4_message_api_message_api_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_xmtpv4_message_api_message_api_proto_goTypes = []any{
	(*EnvelopesQuery)(nil),                // 0: xmtp.xmtpv4.message_api.EnvelopesQuery
	(*SubscribeEnvelopesRequest)(nil),     // 1: xmtp.xmtpv4.message_api.SubscribeEnvelopesRequest
	(*SubscribeEnvelopesResponse)(nil),    // 2: xmtp.xmtpv4.message_api.SubscribeEnvelopesResponse
	(*QueryEnvelopesRequest)(nil),         // 3: xmtp.xmtpv4.message_api.QueryEnvelopesRequest
	(*QueryEnvelopesResponse)(nil),        // 4: xmtp.xmtpv4.message_api.QueryEnvelopesResponse
	(*PublishPayerEnvelopesRequest)(nil),  // 5: xmtp.xmtpv4.message_api.PublishPayerEnvelopesRequest
	(*PublishPayerEnvelopesResponse)(nil), // 6: xmtp.xmtpv4.message_api.PublishPayerEnvelopesResponse
	(*GetInboxIdsRequest)(nil),            // 7: xmtp.xmtpv4.message_api.GetInboxIdsRequest
	(*GetInboxIdsResponse)(nil),           // 8: xmtp.xmtpv4.message_api.GetInboxIdsResponse
	(*GetInboxIdsRequest_Request)(nil),    // 9: xmtp.xmtpv4.message_api.GetInboxIdsRequest.Request
	(*GetInboxIdsResponse_Response)(nil),  // 10: xmtp.xmtpv4.message_api.GetInboxIdsResponse.Response
	(*envelopes.Cursor)(nil),              // 11: xmtp.xmtpv4.envelopes.Cursor
	(*envelopes.OriginatorEnvelope)(nil),  // 12: xmtp.xmtpv4.envelopes.OriginatorEnvelope
	(*envelopes.PayerEnvelope)(nil),       // 13: xmtp.xmtpv4.envelopes.PayerEnvelope
	(associations.IdentifierKind)(0),      // 14: xmtp.identity.associations.IdentifierKind
}
var file_xmtpv4_message_api_message_api_proto_depIdxs = []int32{
	11, // 0: xmtp.xmtpv4.message_api.EnvelopesQuery.last_seen:type_name -> xmtp.xmtpv4.envelopes.Cursor
	0,  // 1: xmtp.xmtpv4.message_api.SubscribeEnvelopesRequest.query:type_name -> xmtp.xmtpv4.message_api.EnvelopesQuery
	12, // 2: xmtp.xmtpv4.message_api.SubscribeEnvelopesResponse.envelopes:type_name -> xmtp.xmtpv4.envelopes.OriginatorEnvelope
	0,  // 3: xmtp.xmtpv4.message_api.QueryEnvelopesRequest.query:type_name -> xmtp.xmtpv4.message_api.EnvelopesQuery
	12, // 4: xmtp.xmtpv4.message_api.QueryEnvelopesResponse.envelopes:type_name -> xmtp.xmtpv4.envelopes.OriginatorEnvelope
	13, // 5: xmtp.xmtpv4.message_api.PublishPayerEnvelopesRequest.payer_envelopes:type_name -> xmtp.xmtpv4.envelopes.PayerEnvelope
	12, // 6: xmtp.xmtpv4.message_api.PublishPayerEnvelopesResponse.originator_envelopes:type_name -> xmtp.xmtpv4.envelopes.OriginatorEnvelope
	9,  // 7: xmtp.xmtpv4.message_api.GetInboxIdsRequest.requests:type_name -> xmtp.xmtpv4.message_api.GetInboxIdsRequest.Request
	10, // 8: xmtp.xmtpv4.message_api.GetInboxIdsResponse.responses:type_name -> xmtp.xmtpv4.message_api.GetInboxIdsResponse.Response
	14, // 9: xmtp.xmtpv4.message_api.GetInboxIdsRequest.Request.identifier_kind:type_name -> xmtp.identity.associations.IdentifierKind
	14, // 10: xmtp.xmtpv4.message_api.GetInboxIdsResponse.Response.identifier_kind:type_name -> xmtp.identity.associations.IdentifierKind
	1,  // 11: xmtp.xmtpv4.message_api.ReplicationApi.SubscribeEnvelopes:input_type -> xmtp.xmtpv4.message_api.SubscribeEnvelopesRequest
	3,  // 12: xmtp.xmtpv4.message_api.ReplicationApi.QueryEnvelopes:input_type -> xmtp.xmtpv4.message_api.QueryEnvelopesRequest
	5,  // 13: xmtp.xmtpv4.message_api.ReplicationApi.PublishPayerEnvelopes:input_type -> xmtp.xmtpv4.message_api.PublishPayerEnvelopesRequest
	7,  // 14: xmtp.xmtpv4.message_api.ReplicationApi.GetInboxIds:input_type -> xmtp.xmtpv4.message_api.GetInboxIdsRequest
	2,  // 15: xmtp.xmtpv4.message_api.ReplicationApi.SubscribeEnvelopes:output_type -> xmtp.xmtpv4.message_api.SubscribeEnvelopesResponse
	4,  // 16: xmtp.xmtpv4.message_api.ReplicationApi.QueryEnvelopes:output_type -> xmtp.xmtpv4.message_api.QueryEnvelopesResponse
	6,  // 17: xmtp.xmtpv4.message_api.ReplicationApi.PublishPayerEnvelopes:output_type -> xmtp.xmtpv4.message_api.PublishPayerEnvelopesResponse
	8,  // 18: xmtp.xmtpv4.message_api.ReplicationApi.GetInboxIds:output_type -> xmtp.xmtpv4.message_api.GetInboxIdsResponse
	15, // [15:19] is the sub-list for method output_type
	11, // [11:15] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_xmtpv4_message_api_message_api_proto_init() }
func file_xmtpv4_message_api_message_api_proto_init() {
	if File_xmtpv4_message_api_message_api_proto != nil {
		return
	}
	file_xmtpv4_message_api_message_api_proto_msgTypes[10].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_xmtpv4_message_api_message_api_proto_rawDesc), len(file_xmtpv4_message_api_message_api_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_xmtpv4_message_api_message_api_proto_goTypes,
		DependencyIndexes: file_xmtpv4_message_api_message_api_proto_depIdxs,
		MessageInfos:      file_xmtpv4_message_api_message_api_proto_msgTypes,
	}.Build()
	File_xmtpv4_message_api_message_api_proto = out.File
	file_xmtpv4_message_api_message_api_proto_goTypes = nil
	file_xmtpv4_message_api_message_api_proto_depIdxs = nil
}
