// API for reporting and querying node misbehavior in decentralized XMTP

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: xmtpv4/message_api/misbehavior_api.proto

package message_api

import (
	associations "github.com/xmtp/xmtpd/pkg/proto/identity/associations"
	envelopes "github.com/xmtp/xmtpd/pkg/proto/xmtpv4/envelopes"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Misbehavior int32

const (
	Misbehavior_MISBEHAVIOR_UNSPECIFIED              Misbehavior = 0
	Misbehavior_MISBEHAVIOR_UNRESPONSIVE_NODE        Misbehavior = 1
	Misbehavior_MISBEHAVIOR_SLOW_NODE                Misbehavior = 2
	Misbehavior_MISBEHAVIOR_FAILED_REQUEST           Misbehavior = 3
	Misbehavior_MISBEHAVIOR_OUT_OF_ORDER             Misbehavior = 4
	Misbehavior_MISBEHAVIOR_DUPLICATE_SEQUENCE_ID    Misbehavior = 5
	Misbehavior_MISBEHAVIOR_CAUSAL_ORDERING          Misbehavior = 6
	Misbehavior_MISBEHAVIOR_INVALID_PAYLOAD          Misbehavior = 7
	Misbehavior_MISBEHAVIOR_BLOCKCHAIN_INCONSISTENCY Misbehavior = 8
)

// Enum value maps for Misbehavior.
var (
	Misbehavior_name = map[int32]string{
		0: "MISBEHAVIOR_UNSPECIFIED",
		1: "MISBEHAVIOR_UNRESPONSIVE_NODE",
		2: "MISBEHAVIOR_SLOW_NODE",
		3: "MISBEHAVIOR_FAILED_REQUEST",
		4: "MISBEHAVIOR_OUT_OF_ORDER",
		5: "MISBEHAVIOR_DUPLICATE_SEQUENCE_ID",
		6: "MISBEHAVIOR_CAUSAL_ORDERING",
		7: "MISBEHAVIOR_INVALID_PAYLOAD",
		8: "MISBEHAVIOR_BLOCKCHAIN_INCONSISTENCY",
	}
	Misbehavior_value = map[string]int32{
		"MISBEHAVIOR_UNSPECIFIED":              0,
		"MISBEHAVIOR_UNRESPONSIVE_NODE":        1,
		"MISBEHAVIOR_SLOW_NODE":                2,
		"MISBEHAVIOR_FAILED_REQUEST":           3,
		"MISBEHAVIOR_OUT_OF_ORDER":             4,
		"MISBEHAVIOR_DUPLICATE_SEQUENCE_ID":    5,
		"MISBEHAVIOR_CAUSAL_ORDERING":          6,
		"MISBEHAVIOR_INVALID_PAYLOAD":          7,
		"MISBEHAVIOR_BLOCKCHAIN_INCONSISTENCY": 8,
	}
)

func (x Misbehavior) Enum() *Misbehavior {
	p := new(Misbehavior)
	*p = x
	return p
}

func (x Misbehavior) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Misbehavior) Descriptor() protoreflect.EnumDescriptor {
	return file_xmtpv4_message_api_misbehavior_api_proto_enumTypes[0].Descriptor()
}

func (Misbehavior) Type() protoreflect.EnumType {
	return &file_xmtpv4_message_api_misbehavior_api_proto_enumTypes[0]
}

func (x Misbehavior) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Misbehavior.Descriptor instead.
func (Misbehavior) EnumDescriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_misbehavior_api_proto_rawDescGZIP(), []int{0}
}

type LivenessFailure struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ResponseTimeNs uint32                 `protobuf:"varint,1,opt,name=response_time_ns,json=responseTimeNs,proto3" json:"response_time_ns,omitempty"`
	// Types that are valid to be assigned to Request:
	//
	//	*LivenessFailure_Subscribe
	//	*LivenessFailure_Query
	//	*LivenessFailure_Publish
	Request       isLivenessFailure_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LivenessFailure) Reset() {
	*x = LivenessFailure{}
	mi := &file_xmtpv4_message_api_misbehavior_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LivenessFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LivenessFailure) ProtoMessage() {}

func (x *LivenessFailure) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_misbehavior_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LivenessFailure.ProtoReflect.Descriptor instead.
func (*LivenessFailure) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_misbehavior_api_proto_rawDescGZIP(), []int{0}
}

func (x *LivenessFailure) GetResponseTimeNs() uint32 {
	if x != nil {
		return x.ResponseTimeNs
	}
	return 0
}

func (x *LivenessFailure) GetRequest() isLivenessFailure_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *LivenessFailure) GetSubscribe() *SubscribeEnvelopesRequest {
	if x != nil {
		if x, ok := x.Request.(*LivenessFailure_Subscribe); ok {
			return x.Subscribe
		}
	}
	return nil
}

func (x *LivenessFailure) GetQuery() *QueryEnvelopesRequest {
	if x != nil {
		if x, ok := x.Request.(*LivenessFailure_Query); ok {
			return x.Query
		}
	}
	return nil
}

func (x *LivenessFailure) GetPublish() *PublishPayerEnvelopesRequest {
	if x != nil {
		if x, ok := x.Request.(*LivenessFailure_Publish); ok {
			return x.Publish
		}
	}
	return nil
}

type isLivenessFailure_Request interface {
	isLivenessFailure_Request()
}

type LivenessFailure_Subscribe struct {
	Subscribe *SubscribeEnvelopesRequest `protobuf:"bytes,2,opt,name=subscribe,proto3,oneof"`
}

type LivenessFailure_Query struct {
	Query *QueryEnvelopesRequest `protobuf:"bytes,3,opt,name=query,proto3,oneof"`
}

type LivenessFailure_Publish struct {
	Publish *PublishPayerEnvelopesRequest `protobuf:"bytes,4,opt,name=publish,proto3,oneof"`
}

func (*LivenessFailure_Subscribe) isLivenessFailure_Request() {}

func (*LivenessFailure_Query) isLivenessFailure_Request() {}

func (*LivenessFailure_Publish) isLivenessFailure_Request() {}

type SafetyFailure struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Envelopes     []*envelopes.OriginatorEnvelope `protobuf:"bytes,1,rep,name=envelopes,proto3" json:"envelopes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SafetyFailure) Reset() {
	*x = SafetyFailure{}
	mi := &file_xmtpv4_message_api_misbehavior_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SafetyFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SafetyFailure) ProtoMessage() {}

func (x *SafetyFailure) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_misbehavior_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SafetyFailure.ProtoReflect.Descriptor instead.
func (*SafetyFailure) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_misbehavior_api_proto_rawDescGZIP(), []int{1}
}

func (x *SafetyFailure) GetEnvelopes() []*envelopes.OriginatorEnvelope {
	if x != nil {
		return x.Envelopes
	}
	return nil
}

type UnsignedMisbehaviorReport struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ReporterTimeNs    uint64                 `protobuf:"varint,1,opt,name=reporter_time_ns,json=reporterTimeNs,proto3" json:"reporter_time_ns,omitempty"`
	MisbehavingNodeId uint32                 `protobuf:"varint,2,opt,name=misbehaving_node_id,json=misbehavingNodeId,proto3" json:"misbehaving_node_id,omitempty"`
	Type              Misbehavior            `protobuf:"varint,3,opt,name=type,proto3,enum=xmtp.xmtpv4.message_api.Misbehavior" json:"type,omitempty"`
	// Types that are valid to be assigned to Failure:
	//
	//	*UnsignedMisbehaviorReport_Liveness
	//	*UnsignedMisbehaviorReport_Safety
	Failure isUnsignedMisbehaviorReport_Failure `protobuf_oneof:"failure"`
	// Nodes must verify this field is false for client-submitted reports
	SubmittedByNode bool `protobuf:"varint,6,opt,name=submitted_by_node,json=submittedByNode,proto3" json:"submitted_by_node,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UnsignedMisbehaviorReport) Reset() {
	*x = UnsignedMisbehaviorReport{}
	mi := &file_xmtpv4_message_api_misbehavior_api_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnsignedMisbehaviorReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsignedMisbehaviorReport) ProtoMessage() {}

func (x *UnsignedMisbehaviorReport) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_misbehavior_api_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsignedMisbehaviorReport.ProtoReflect.Descriptor instead.
func (*UnsignedMisbehaviorReport) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_misbehavior_api_proto_rawDescGZIP(), []int{2}
}

func (x *UnsignedMisbehaviorReport) GetReporterTimeNs() uint64 {
	if x != nil {
		return x.ReporterTimeNs
	}
	return 0
}

func (x *UnsignedMisbehaviorReport) GetMisbehavingNodeId() uint32 {
	if x != nil {
		return x.MisbehavingNodeId
	}
	return 0
}

func (x *UnsignedMisbehaviorReport) GetType() Misbehavior {
	if x != nil {
		return x.Type
	}
	return Misbehavior_MISBEHAVIOR_UNSPECIFIED
}

func (x *UnsignedMisbehaviorReport) GetFailure() isUnsignedMisbehaviorReport_Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *UnsignedMisbehaviorReport) GetLiveness() *LivenessFailure {
	if x != nil {
		if x, ok := x.Failure.(*UnsignedMisbehaviorReport_Liveness); ok {
			return x.Liveness
		}
	}
	return nil
}

func (x *UnsignedMisbehaviorReport) GetSafety() *SafetyFailure {
	if x != nil {
		if x, ok := x.Failure.(*UnsignedMisbehaviorReport_Safety); ok {
			return x.Safety
		}
	}
	return nil
}

func (x *UnsignedMisbehaviorReport) GetSubmittedByNode() bool {
	if x != nil {
		return x.SubmittedByNode
	}
	return false
}

type isUnsignedMisbehaviorReport_Failure interface {
	isUnsignedMisbehaviorReport_Failure()
}

type UnsignedMisbehaviorReport_Liveness struct {
	Liveness *LivenessFailure `protobuf:"bytes,4,opt,name=liveness,proto3,oneof"`
}

type UnsignedMisbehaviorReport_Safety struct {
	Safety *SafetyFailure `protobuf:"bytes,5,opt,name=safety,proto3,oneof"`
}

func (*UnsignedMisbehaviorReport_Liveness) isUnsignedMisbehaviorReport_Failure() {}

func (*UnsignedMisbehaviorReport_Safety) isUnsignedMisbehaviorReport_Failure() {}

type MisbehaviorReport struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Server time when the report was stored. Used only for querying reports.
	// This field is not signed.
	ServerTimeNs              uint64 `protobuf:"varint,1,opt,name=server_time_ns,json=serverTimeNs,proto3" json:"server_time_ns,omitempty"`
	UnsignedMisbehaviorReport []byte `protobuf:"bytes,2,opt,name=unsigned_misbehavior_report,json=unsignedMisbehaviorReport,proto3" json:"unsigned_misbehavior_report,omitempty"`
	// Signed by the node hosting the report
	Signature     *associations.RecoverableEcdsaSignature `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MisbehaviorReport) Reset() {
	*x = MisbehaviorReport{}
	mi := &file_xmtpv4_message_api_misbehavior_api_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MisbehaviorReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MisbehaviorReport) ProtoMessage() {}

func (x *MisbehaviorReport) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_misbehavior_api_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MisbehaviorReport.ProtoReflect.Descriptor instead.
func (*MisbehaviorReport) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_misbehavior_api_proto_rawDescGZIP(), []int{3}
}

func (x *MisbehaviorReport) GetServerTimeNs() uint64 {
	if x != nil {
		return x.ServerTimeNs
	}
	return 0
}

func (x *MisbehaviorReport) GetUnsignedMisbehaviorReport() []byte {
	if x != nil {
		return x.UnsignedMisbehaviorReport
	}
	return nil
}

func (x *MisbehaviorReport) GetSignature() *associations.RecoverableEcdsaSignature {
	if x != nil {
		return x.Signature
	}
	return nil
}

type SubmitMisbehaviorReportRequest struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Report        *UnsignedMisbehaviorReport `protobuf:"bytes,1,opt,name=report,proto3" json:"report,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitMisbehaviorReportRequest) Reset() {
	*x = SubmitMisbehaviorReportRequest{}
	mi := &file_xmtpv4_message_api_misbehavior_api_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitMisbehaviorReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitMisbehaviorReportRequest) ProtoMessage() {}

func (x *SubmitMisbehaviorReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_misbehavior_api_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitMisbehaviorReportRequest.ProtoReflect.Descriptor instead.
func (*SubmitMisbehaviorReportRequest) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_misbehavior_api_proto_rawDescGZIP(), []int{4}
}

func (x *SubmitMisbehaviorReportRequest) GetReport() *UnsignedMisbehaviorReport {
	if x != nil {
		return x.Report
	}
	return nil
}

type SubmitMisbehaviorReportResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitMisbehaviorReportResponse) Reset() {
	*x = SubmitMisbehaviorReportResponse{}
	mi := &file_xmtpv4_message_api_misbehavior_api_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitMisbehaviorReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitMisbehaviorReportResponse) ProtoMessage() {}

func (x *SubmitMisbehaviorReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_misbehavior_api_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitMisbehaviorReportResponse.ProtoReflect.Descriptor instead.
func (*SubmitMisbehaviorReportResponse) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_misbehavior_api_proto_rawDescGZIP(), []int{5}
}

type QueryMisbehaviorReportsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AfterNs       uint64                 `protobuf:"varint,1,opt,name=after_ns,json=afterNs,proto3" json:"after_ns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryMisbehaviorReportsRequest) Reset() {
	*x = QueryMisbehaviorReportsRequest{}
	mi := &file_xmtpv4_message_api_misbehavior_api_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryMisbehaviorReportsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMisbehaviorReportsRequest) ProtoMessage() {}

func (x *QueryMisbehaviorReportsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_misbehavior_api_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMisbehaviorReportsRequest.ProtoReflect.Descriptor instead.
func (*QueryMisbehaviorReportsRequest) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_misbehavior_api_proto_rawDescGZIP(), []int{6}
}

func (x *QueryMisbehaviorReportsRequest) GetAfterNs() uint64 {
	if x != nil {
		return x.AfterNs
	}
	return 0
}

type QueryMisbehaviorReportsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reports       []*MisbehaviorReport   `protobuf:"bytes,1,rep,name=reports,proto3" json:"reports,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryMisbehaviorReportsResponse) Reset() {
	*x = QueryMisbehaviorReportsResponse{}
	mi := &file_xmtpv4_message_api_misbehavior_api_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryMisbehaviorReportsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMisbehaviorReportsResponse) ProtoMessage() {}

func (x *QueryMisbehaviorReportsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_misbehavior_api_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMisbehaviorReportsResponse.ProtoReflect.Descriptor instead.
func (*QueryMisbehaviorReportsResponse) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_misbehavior_api_proto_rawDescGZIP(), []int{7}
}

func (x *QueryMisbehaviorReportsResponse) GetReports() []*MisbehaviorReport {
	if x != nil {
		return x.Reports
	}
	return nil
}

var File_xmtpv4_message_api_misbehavior_api_proto protoreflect.FileDescriptor

const file_xmtpv4_message_api_misbehavior_api_proto_rawDesc = "" +
	"\n" +
	"(xmtpv4/message_api/misbehavior_api.proto\x12\x17xmtp.xmtpv4.message_api\x1a\x1cgoogle/api/annotations.proto\x1a%identity/associations/signature.proto\x1a xmtpv4/envelopes/envelopes.proto\x1a$xmtpv4/message_api/message_api.proto\"\xb5\x02\n" +
	"\x0fLivenessFailure\x12(\n" +
	"\x10response_time_ns\x18\x01 \x01(\rR\x0eresponseTimeNs\x12R\n" +
	"\tsubscribe\x18\x02 \x01(\v22.xmtp.xmtpv4.message_api.SubscribeEnvelopesRequestH\x00R\tsubscribe\x12F\n" +
	"\x05query\x18\x03 \x01(\v2..xmtp.xmtpv4.message_api.QueryEnvelopesRequestH\x00R\x05query\x12Q\n" +
	"\apublish\x18\x04 \x01(\v25.xmtp.xmtpv4.message_api.PublishPayerEnvelopesRequestH\x00R\apublishB\t\n" +
	"\arequest\"X\n" +
	"\rSafetyFailure\x12G\n" +
	"\tenvelopes\x18\x01 \x03(\v2).xmtp.xmtpv4.envelopes.OriginatorEnvelopeR\tenvelopes\"\xf0\x02\n" +
	"\x19UnsignedMisbehaviorReport\x12(\n" +
	"\x10reporter_time_ns\x18\x01 \x01(\x04R\x0ereporterTimeNs\x12.\n" +
	"\x13misbehaving_node_id\x18\x02 \x01(\rR\x11misbehavingNodeId\x128\n" +
	"\x04type\x18\x03 \x01(\x0e2$.xmtp.xmtpv4.message_api.MisbehaviorR\x04type\x12F\n" +
	"\bliveness\x18\x04 \x01(\v2(.xmtp.xmtpv4.message_api.LivenessFailureH\x00R\bliveness\x12@\n" +
	"\x06safety\x18\x05 \x01(\v2&.xmtp.xmtpv4.message_api.SafetyFailureH\x00R\x06safety\x12*\n" +
	"\x11submitted_by_node\x18\x06 \x01(\bR\x0fsubmittedByNodeB\t\n" +
	"\afailure\"\xce\x01\n" +
	"\x11MisbehaviorReport\x12$\n" +
	"\x0eserver_time_ns\x18\x01 \x01(\x04R\fserverTimeNs\x12>\n" +
	"\x1bunsigned_misbehavior_report\x18\x02 \x01(\fR\x19unsignedMisbehaviorReport\x12S\n" +
	"\tsignature\x18\x03 \x01(\v25.xmtp.identity.associations.RecoverableEcdsaSignatureR\tsignature\"l\n" +
	"\x1eSubmitMisbehaviorReportRequest\x12J\n" +
	"\x06report\x18\x01 \x01(\v22.xmtp.xmtpv4.message_api.UnsignedMisbehaviorReportR\x06report\"!\n" +
	"\x1fSubmitMisbehaviorReportResponse\";\n" +
	"\x1eQueryMisbehaviorReportsRequest\x12\x19\n" +
	"\bafter_ns\x18\x01 \x01(\x04R\aafterNs\"g\n" +
	"\x1fQueryMisbehaviorReportsResponse\x12D\n" +
	"\areports\x18\x01 \x03(\v2*.xmtp.xmtpv4.message_api.MisbehaviorReportR\areports*\xb9\x02\n" +
	"\vMisbehavior\x12\x1b\n" +
	"\x17MISBEHAVIOR_UNSPECIFIED\x10\x00\x12!\n" +
	"\x1dMISBEHAVIOR_UNRESPONSIVE_NODE\x10\x01\x12\x19\n" +
	"\x15MISBEHAVIOR_SLOW_NODE\x10\x02\x12\x1e\n" +
	"\x1aMISBEHAVIOR_FAILED_REQUEST\x10\x03\x12\x1c\n" +
	"\x18MISBEHAVIOR_OUT_OF_ORDER\x10\x04\x12%\n" +
	"!MISBEHAVIOR_DUPLICATE_SEQUENCE_ID\x10\x05\x12\x1f\n" +
	"\x1bMISBEHAVIOR_CAUSAL_ORDERING\x10\x06\x12\x1f\n" +
	"\x1bMISBEHAVIOR_INVALID_PAYLOAD\x10\a\x12(\n" +
	"$MISBEHAVIOR_BLOCKCHAIN_INCONSISTENCY\x10\b2\x8a\x03\n" +
	"\x0eMisbehaviorApi\x12\xba\x01\n" +
	"\x17SubmitMisbehaviorReport\x127.xmtp.xmtpv4.message_api.SubmitMisbehaviorReportRequest\x1a8.xmtp.xmtpv4.message_api.SubmitMisbehaviorReportResponse\",\x82\xd3\xe4\x93\x02&:\x01*\"!/mls/v2/submit-misbehavior-report\x12\xba\x01\n" +
	"\x17QueryMisbehaviorReports\x127.xmtp.xmtpv4.message_api.QueryMisbehaviorReportsRequest\x1a8.xmtp.xmtpv4.message_api.QueryMisbehaviorReportsResponse\",\x82\xd3\xe4\x93\x02&:\x01*\"!/mls/v2/query-misbehavior-reportsB\xe0\x01\n" +
	"\x1bcom.xmtp.xmtpv4.message_apiB\x13MisbehaviorApiProtoP\x01Z2github.com/xmtp/xmtpd/pkg/proto/xmtpv4/message_api\xa2\x02\x03XXM\xaa\x02\x16Xmtp.Xmtpv4.MessageApi\xca\x02\x16Xmtp\\Xmtpv4\\MessageApi\xe2\x02\"Xmtp\\Xmtpv4\\MessageApi\\GPBMetadata\xea\x02\x18Xmtp::Xmtpv4::MessageApib\x06proto3"

var (
	file_xmtpv4_message_api_misbehavior_api_proto_rawDescOnce sync.Once
	file_xmtpv4_message_api_misbehavior_api_proto_rawDescData []byte
)

func file_xmtpv4_message_api_misbehavior_api_proto_rawDescGZIP() []byte {
	file_xmtpv4_message_api_misbehavior_api_proto_rawDescOnce.Do(func() {
		file_xmtpv4_message_api_misbehavior_api_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_xmtpv4_message_api_misbehavior_api_proto_rawDesc), len(file_xmtpv4_message_api_misbehavior_api_proto_rawDesc)))
	})
	return file_xmtpv4_message_api_misbehavior_api_proto_rawDescData
}

var file_xmtpv4_message_api_misbehavior_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_xmtpv4_message_api_misbehavior_api_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_xmtpv4_message_api_misbehavior_api_proto_goTypes = []any{
	(Misbehavior)(0),                               // 0: xmtp.xmtpv4.message_api.Misbehavior
	(*LivenessFailure)(nil),                        // 1: xmtp.xmtpv4.message_api.LivenessFailure
	(*SafetyFailure)(nil),                          // 2: xmtp.xmtpv4.message_api.SafetyFailure
	(*UnsignedMisbehaviorReport)(nil),              // 3: xmtp.xmtpv4.message_api.UnsignedMisbehaviorReport
	(*MisbehaviorReport)(nil),                      // 4: xmtp.xmtpv4.message_api.MisbehaviorReport
	(*SubmitMisbehaviorReportRequest)(nil),         // 5: xmtp.xmtpv4.message_api.SubmitMisbehaviorReportRequest
	(*SubmitMisbehaviorReportResponse)(nil),        // 6: xmtp.xmtpv4.message_api.SubmitMisbehaviorReportResponse
	(*QueryMisbehaviorReportsRequest)(nil),         // 7: xmtp.xmtpv4.message_api.QueryMisbehaviorReportsRequest
	(*QueryMisbehaviorReportsResponse)(nil),        // 8: xmtp.xmtpv4.message_api.QueryMisbehaviorReportsResponse
	(*SubscribeEnvelopesRequest)(nil),              // 9: xmtp.xmtpv4.message_api.SubscribeEnvelopesRequest
	(*QueryEnvelopesRequest)(nil),                  // 10: xmtp.xmtpv4.message_api.QueryEnvelopesRequest
	(*PublishPayerEnvelopesRequest)(nil),           // 11: xmtp.xmtpv4.message_api.PublishPayerEnvelopesRequest
	(*envelopes.OriginatorEnvelope)(nil),           // 12: xmtp.xmtpv4.envelopes.OriginatorEnvelope
	(*associations.RecoverableEcdsaSignature)(nil), // 13: xmtp.identity.associations.RecoverableEcdsaSignature
}
var file_xmtpv4_message_api_misbehavior_api_proto_depIdxs = []int32{
	9,  // 0: xmtp.xmtpv4.message_api.LivenessFailure.subscribe:type_name -> xmtp.xmtpv4.message_api.SubscribeEnvelopesRequest
	10, // 1: xmtp.xmtpv4.message_api.LivenessFailure.query:type_name -> xmtp.xmtpv4.message_api.QueryEnvelopesRequest
	11, // 2: xmtp.xmtpv4.message_api.LivenessFailure.publish:type_name -> xmtp.xmtpv4.message_api.PublishPayerEnvelopesRequest
	12, // 3: xmtp.xmtpv4.message_api.SafetyFailure.envelopes:type_name -> xmtp.xmtpv4.envelopes.OriginatorEnvelope
	0,  // 4: xmtp.xmtpv4.message_api.UnsignedMisbehaviorReport.type:type_name -> xmtp.xmtpv4.message_api.Misbehavior
	1,  // 5: xmtp.xmtpv4.message_api.UnsignedMisbehaviorReport.liveness:type_name -> xmtp.xmtpv4.message_api.LivenessFailure
	2,  // 6: xmtp.xmtpv4.message_api.UnsignedMisbehaviorReport.safety:type_name -> xmtp.xmtpv4.message_api.SafetyFailure
	13, // 7: xmtp.xmtpv4.message_api.MisbehaviorReport.signature:type_name -> xmtp.identity.associations.RecoverableEcdsaSignature
	3,  // 8: xmtp.xmtpv4.message_api.SubmitMisbehaviorReportRequest.report:type_name -> xmtp.xmtpv4.message_api.UnsignedMisbehaviorReport
	4,  // 9: xmtp.xmtpv4.message_api.QueryMisbehaviorReportsResponse.reports:type_name -> xmtp.xmtpv4.message_api.MisbehaviorReport
	5,  // 10: xmtp.xmtpv4.message_api.MisbehaviorApi.SubmitMisbehaviorReport:input_type -> xmtp.xmtpv4.message_api.SubmitMisbehaviorReportRequest
	7,  // 11: xmtp.xmtpv4.message_api.MisbehaviorApi.QueryMisbehaviorReports:input_type -> xmtp.xmtpv4.message_api.QueryMisbehaviorReportsRequest
	6,  // 12: xmtp.xmtpv4.message_api.MisbehaviorApi.SubmitMisbehaviorReport:output_type -> xmtp.xmtpv4.message_api.SubmitMisbehaviorReportResponse
	8,  // 13: xmtp.xmtpv4.message_api.MisbehaviorApi.QueryMisbehaviorReports:output_type -> xmtp.xmtpv4.message_api.QueryMisbehaviorReportsResponse
	12, // [12:14] is the sub-list for method output_type
	10, // [10:12] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_xmtpv4_message_api_misbehavior_api_proto_init() }
func file_xmtpv4_message_api_misbehavior_api_proto_init() {
	if File_xmtpv4_message_api_misbehavior_api_proto != nil {
		return
	}
	file_xmtpv4_message_api_message_api_proto_init()
	file_xmtpv4_message_api_misbehavior_api_proto_msgTypes[0].OneofWrappers = []any{
		(*LivenessFailure_Subscribe)(nil),
		(*LivenessFailure_Query)(nil),
		(*LivenessFailure_Publish)(nil),
	}
	file_xmtpv4_message_api_misbehavior_api_proto_msgTypes[2].OneofWrappers = []any{
		(*UnsignedMisbehaviorReport_Liveness)(nil),
		(*UnsignedMisbehaviorReport_Safety)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_xmtpv4_message_api_misbehavior_api_proto_rawDesc), len(file_xmtpv4_message_api_misbehavior_api_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_xmtpv4_message_api_misbehavior_api_proto_goTypes,
		DependencyIndexes: file_xmtpv4_message_api_misbehavior_api_proto_depIdxs,
		EnumInfos:         file_xmtpv4_message_api_misbehavior_api_proto_enumTypes,
		MessageInfos:      file_xmtpv4_message_api_misbehavior_api_proto_msgTypes,
	}.Build()
	File_xmtpv4_message_api_misbehavior_api_proto = out.File
	file_xmtpv4_message_api_misbehavior_api_proto_goTypes = nil
	file_xmtpv4_message_api_misbehavior_api_proto_depIdxs = nil
}
